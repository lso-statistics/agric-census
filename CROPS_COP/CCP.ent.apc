{Application 'CCP' logic file generated by CSPro}
PROC GLOBAL

numeric CensusYear = 2020;
numeric CensusMonth = 4;
numeric YoungestAgeMarriage = 12;
numeric MaxNumOfYrsOutsideLesotho = 3;
numeric MinAgeDiffBtwnChildAndParent = 12;
numeric MinRetirementAge = 24;
numeric MinAgeForFertility = 12;
numeric MaxAgeForFertility = 50;
numeric MinAgeForEducation = 3;
numeric MinAgeForEconomicActivity = 10;
numeric MinAgeforworking = 10;
numeric i = 1, j = 1, numberOfCrops, numberOfFields;

// declare arrays dynamic value set
array numeric codes(100);
array string labels(100);
string crops;
array numeric respondentCodes(100);
array string respondentLabels(100);

function CheckBlank(string value)
	if value = "" then
		errmsg("The field cannot be blank");
		reenter;
	endif;
end;

//Max of 50 people in a household with 2 (person number and person name) columns to be displayed.
array string personsArray(50, 2);
array string deceasedArray(30, 1);

// Show list of entries in persons roster in a dialog
// and let interviewer pick one.
// Returns the row number of the person that was picked
// or zero if the dialog was cancelled.
function PickFromPERSON_ROSTER()
	numeric person;

	do person = 1 while person <= totocc(PERSON_ROSTER);
		personsArray(person, 1) =  maketext("%d", visualvalue(B1(person)));
		personsArray(person, 2) =  strip(B2(person));
	enddo;

	personsArray(person, 1) = "";
	numeric picked = showarray(personsArray, title("Person Number", "Names"));
	PickFromPERSON_ROSTER = picked;
end;
//------------------------------------------------------------------------------------------

function UpdateOccurrenceLabels()
	// Fill in occurrence labels for individual rosters
	// in case we are coming into a partially saved case or
	// are in modify mode in which case the names have been entered
	// but are not yet set in case tree since we have not yet gotten
	// to field B2 (names).
	//numeric i;
	do i = 1 while i <= maxocc(PERSON_ROSTER)

		string occurrenceLabel;
		if i <= totocc(PERSON_ROSTER) then
			occurrenceLabel = strip(B2(i));
		else
			// Work around bug in CSPro where when entering a new case
			// the occurrence labels from the previous case are still there.
			// This will replace the occurrence label with the row number 1,2,3...
			occurrenceLabel = maketext("%d",i);
		endif;

		setocclabel(PERSON_ROSTER(i), occurrenceLabel);
		setocclabel(DEMOGRAPHIC_ROSTER(i), occurrenceLabel);
		
	enddo;

end;
//----------------------------------------------------------------------------------------------------
function DeletePerson()

	numeric person = PickFromPERSON_ROSTER();
	if person > 0 then
		numeric choice = errmsg("Do you really want to delete %s's record?", strip(B2(person)))
		select("YES",CONTINUE, "NO",CONTINUE);

		if choice = 1 then

			if person = 1 then
				errmsg("You cannot delete %s's record because %s is Household head", strip(B2(person)), strip(B2(person)));

			else
				delete (PERSON_ROSTER(person));

				if person <= totocc(DEMOGRAPHIC_ROSTER) then
					delete (DEMOGRAPHIC_ROSTER(person));
				endif;
				NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
				UpdateOccurrenceLabels();

				//numeric i;
				do i = person while i <= totocc(PERSON_ROSTER);
					B1(i) = i;
				enddo;

				numeric lastPerson = totocc(PERSON_ROSTER);
				move to ANYMORE_PEOPLE(lastPerson) advance;

			endif;

		endif;

	endif;

end;

//a function to display date the application was published. This will help us to identify the latest application
function showVersion()

	numeric publishDay = int(publishdate() / 1000000); // ignore the time
	errmsg("Application published on: %d", publishDay);
	//if datediff(publishDay,sysdate("YYYYMMDD")) > 20 then
	//    errmsg("This program expires after 20 days. Sync to get a new program.");	    
	//endif; 
end;

//-------------------------------------------------------------------------------------------------------

//a function to capture the gps coordinates of the household
function captureHH_Coordinates()
	if gps(open) = 1 then //try to open a gps connection and if successful
		if gps(read, 120) then //take the readings from the gps
			if gps(readlast) <> 1 then //if the was nothing read from the gps
				errmsg("GPS signal could not be acquired. Please stand outside the building or away from trees as this might block satellite signals");
			else
				HH_LATITUDE = gps(latitude);
				HH_LONGITUDE = gps(longitude);
				HH_ALTITUDE = gps(altitude);
				HH_SATELLITES = gps(satellites);
				HH_ACCURACY = gps(accuracy);
				HH_READ_TIME = gps(readtime);
				errmsg("Successfully recorded the household GPS coordinates");
			endif;
		endif;
		gps(close);
	else
		errmsg("The GPS functionality is not enabled on this tablet. Please enable GPS (Location) on your device and try again");
		exit;
	endif;
end;



//function UpdateOccurrenceLabels()
	// Fill in occurrence labels for individual rosters
	// in case we are coming into a partially saved case or
	// are in modify mode in which case the names have been entered
	// but are not yet set in case tree since we have not yet gotten
	// to field B2 (names).
{	numeric i;
	do i = 1 while i <= maxocc(PERSON_ROSTER)

		string occurrenceLabel;
		if i <= totocc(PERSON_ROSTER) then
			occurrenceLabel = strip(B2(i));
		else
			// Work around bug in CSPro where when entering a new case
			// the occurrence labels from the previous case are still there.
			// This will replace the occurrence label with the row number 1,2,3...
			occurrenceLabel = maketext("%d",i);
		endif;

		setocclabel(PERSON_ROSTER(i), occurrenceLabel);
		setocclabel(DEMOGRAPHIC_ROSTER(i), occurrenceLabel);
		setocclabel(DISABILITY_ROSTER(i), occurrenceLabel);
		setocclabel(EDUCATION_ROSTER(i), occurrenceLabel);
		setocclabel(ECONOMIC_ACTIVITY_ROSTER(i), occurrenceLabel);
		setocclabel(FERTILITY_ROSTER(i), occurrenceLabel);

	enddo;
}	
//end;
function UpdateOccurrenceLabelsForLABOURRoasters()
//------------Part 2.5: Labour costs -------------------
setocclabel(LABOUR(1), "Land Preparation");
setocclabel(LABOUR(2), "Planting");
setocclabel(LABOUR(3), "Fertilizer  Application");
setocclabel(LABOUR(4), "1st Weeding");
setocclabel(LABOUR(5), "Application of plant protection products such as herbicides, insecticide, fungicides");
setocclabel(LABOUR(6), "2nd Weeding");
setocclabel(LABOUR(7), "Harvesting");
setocclabel(LABOUR(8), "Transporting the crop from the field to homestead");
setocclabel(LABOUR(9), "Threshing & shelling");
setocclabel(LABOUR(10), "Transporting the crop from the holding to the point of selling");
setocclabel(LABOUR(11), "Other agricultural services (specify)__");
end;

function UpdateOccurrenceLabelsForAGRICSERVICESRoasters()
//------------Part 2.6: Agricultural services -------------------
setocclabel(AGRIC_SERVICES(1), "Ploughing eg. Hiring tractor/draught animals");
setocclabel(AGRIC_SERVICES(2), "Other land preparation & seeding ");
setocclabel(AGRIC_SERVICES(3), "Application of fertilizer");
setocclabel(AGRIC_SERVICES(4), "Application of plant protection products (herbicides, insecticides etc)");
setocclabel(AGRIC_SERVICES(5), "Harvesting");
setocclabel(AGRIC_SERVICES(6), "Transport: from the field to holding, to market etc");
setocclabel(AGRIC_SERVICES(7), "Threshing & shelling");
setocclabel(AGRIC_SERVICES(8), "Other agricultural services (specify)_");
end;

function UpdateOccurrenceLabelsForCROPPRODUCTIONSALESRoasters()
//------------Part 2.7: Crop production and Sales -------------------
setocclabel(CROP_PRODUCTION_SALES(1), "Maize");
setocclabel(CROP_PRODUCTION_SALES(2), "Wheat");
setocclabel(CROP_PRODUCTION_SALES(3), "Sorghum");
setocclabel(CROP_PRODUCTION_SALES(4), "Beans");
setocclabel(CROP_PRODUCTION_SALES(5), "Peas");
end;

function UpdateOccurrenceLabelsForMACHINERYEQUIPMENTCROPRoasters()
//------------Part 3.1: Farm machinery and equipment for Crops-------------------
setocclabel(MACHINERY_EQUIPMENT_CROP(1), "Hand Hoe ");
setocclabel(MACHINERY_EQUIPMENT_CROP(2), "Ox drawn Plough");
setocclabel(MACHINERY_EQUIPMENT_CROP(3), "Tractor drawn Plough");
setocclabel(MACHINERY_EQUIPMENT_CROP(4), "Tractor");
setocclabel(MACHINERY_EQUIPMENT_CROP(5), "Planter");
setocclabel(MACHINERY_EQUIPMENT_CROP(6), "Cultivator");
setocclabel(MACHINERY_EQUIPMENT_CROP(7), "Harrow");
setocclabel(MACHINERY_EQUIPMENT_CROP(8), "Harvester");
setocclabel(MACHINERY_EQUIPMENT_CROP(9), "Hand driven Tractor");
setocclabel(MACHINERY_EQUIPMENT_CROP(10), "Sheller");
setocclabel(MACHINERY_EQUIPMENT_CROP(11), "Ripper");
setocclabel(MACHINERY_EQUIPMENT_CROP(12), "Hammer mill");
setocclabel(MACHINERY_EQUIPMENT_CROP(13), "Hand hammer mill");
setocclabel(MACHINERY_EQUIPMENT_CROP(14), "Rump press/Oil expeller");
setocclabel(MACHINERY_EQUIPMENT_CROP(15), "Sprayer");
setocclabel(MACHINERY_EQUIPMENT_CROP(16), "Scotch carts");
setocclabel(MACHINERY_EQUIPMENT_CROP(17), "Other specify)_");
end;

function UpdateOccurrenceLabelsForIRRIGATIONEQUIPMENTRoasters()
//------------Part 3.1: Farm machinery and equipment for irrigation-------------------
setocclabel(IRRIGATION_EQUIPMENT(1), "Water pump/borehole");
setocclabel(IRRIGATION_EQUIPMENT(2), "Treadle pump");
setocclabel(IRRIGATION_EQUIPMENT(3), "Water tank");
setocclabel(IRRIGATION_EQUIPMENT(4), "Sprinkler");
setocclabel(IRRIGATION_EQUIPMENT(5), "Other specify)_");
end;

function UpdateOccurrenceLabelsForMACHINERYEQUIPEMENTLIVESTOCKRoasters()
//------------Part 3.1: Farm machinery and equipment for Livestock-------------------
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(1), "Feed mixer ");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(2), "Crusher");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(3), "Feed and water trough");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(4), "Milking equipment");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(5), "Castration equipment");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(6), "Dehorning equipment");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(7), "Vet. related tools and equipment");
setocclabel(MACHINERY_EQUIPEMENT_LIVESTOCK(8), "Other (specify)_");
end;

function UpdateOccurrenceLabelsForFARMBUILDINGSINFRASTRUCTURERoasters()
//------------Part 3.2: Farm buildings and infrastructure-------------------
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(1), "Storage facility (warehouses, granaries, etc.)");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(2), "Poultry houses");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(3), "Cow-shed");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(4), "Kraal");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(5), "Fence");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(6), "Reservoir");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(7), "Farm house (to house workers)");
setocclabel(FARM_BUILDINGS_INFRASTRUCTURE(8), "Other (specify)___");
end;

	//savepartial();
PROC SEED_TYPE

numberOfCrops = length(strip(CQ13(i)));

if j < numberOfCrops then
	j = j + 1;
	next;
else
	numberOfFields = numberOfFields - 1;
	j = 1;
endif;

if numberOfFields <> 0 then
	i = i + 1;
else
	endgroup;
endif;
PROC CROPSCOSTOFPRODUCTION_FF


preproc

	userbar (clear);
	userbar (add button, "Delete Person's Record", DeletePerson);
	userbar (add button, "Capture Household GPS Coordinates", captureHH_Coordinates);
	userbar (add button, "Show application version", showVersion);
	userbar (show);



PROC CROPSCOSTOFPRODUCTION_QUEST

preproc
	//UpdateOccurrenceLabelsForLABOURRoasters();
	//UpdateOccurrenceLabelsForAGRICSERVICESRoasters();
	//UpdateOccurrenceLabelsForMACHINERYEQUIPMENTCROPRoasters();
	//UpdateOccurrenceLabelsForIRRIGATIONEQUIPMENTRoasters();
	//UpdateOccurrenceLabelsForMACHINERYEQUIPEMENTLIVESTOCKRoasters();
	//UpdateOccurrenceLabelsForFARMBUILDINGSINFRASTRUCTURERoasters();
	UpdateOccurrenceLabels();
		
PROC INTERVIEW_DATE
preproc

	if demode() = add then
		INTERVIEW_DATE = edit("99/99/9999", sysdate("DDMMYYYY"));
	endif;
PROC DISTRICT
preproc
	if sysparm("DISTRICT") <> "" then
		// Fill in id-items that were passed in from pff file as parameters
		DISTRICT = tonumber(sysparm("DISTRICT"));
		CONSTITUENCY = tonumber(sysparm("CONSTITUENCY"));
		COMMUNITY_COUNCIL = sysparm("COMMUNITY_COUNCIL");
		ZONE = tonumber(sysparm("ZONE"));
		SETTLEMENT = tonumber(sysparm("SETTLEMENT"));
		ENUMERATION_AREA = tonumber(sysparm("ENUMERATION_AREA"));
		PSU_CODE = tonumber(sysparm("PSU_CODE"));
		ENUMERATOR_CODE = sysparm("STAFF_CODE");

		// Make protected so interviewer cannot change id-items
		set attributes (DISTRICT, CONSTITUENCY, COMMUNITY_COUNCIL, ZONE, SETTLEMENT, ENUMERATION_AREA, PSU_CODE) protect;
		
	endif;
PROC VILLAGE_NAME
  CheckBlank(VILLAGE_NAME);
VILLAGE_NAME=toupper(VILLAGE_NAME)
PROC CHIEF

CheckBlank(CHIEF);
CHIEF=toupper(CHIEF)
PROC HOUSEHOLD_HEAD_NAMES

CheckBlank(HOUSEHOLD_HEAD_NAMES);
	HOUSEHOLD_HEAD_NAMES = toupper(HOUSEHOLD_HEAD_NAMES);


PROC VISIT_DATE

preproc

	if visualvalue(VISIT_DATE(curocc())) = notappl then
		 VISIT_DATE = sysdate("YYYYMMDD");
	endif;

postproc

	if VISIT_DATE = sysdate("YYYYMMDD") then
		endgroup;
	endif;
PROC NUMBER_OF_VISITS
preproc

	NUMBER_OF_VISITS = totocc(VISIT_DATE000);
PROC HOUSEHOLD_STATUS
if demode() = add then
	if HH_LATITUDE = notappl then
		if HOUSEHOLD_STATUS in 2:5 then
			errmsg("You cannot save the household without its GPS coordinates. Please capture the coordinates.");
			reenter;
		endif;
	else
		if HOUSEHOLD_STATUS in 2:4 then 
			if APPROVAL_STATUS = 1 then
				endlevel;
			else
				APPROVAL_STATUS = 0;
				savepartial();
				errmsg("The supervisor must approve this case in order for the enumerator to complete it");
				stop(0);
			endif;
		endif;
		
		if HOUSEHOLD_STATUS = 5 and NUMBER_OF_VISITS < 3 then
			errmsg("Refusal can only be accepted if there had been at least 3 attempts or visits");
			reenter;
		elseif HOUSEHOLD_STATUS = 5 and NUMBER_OF_VISITS = 3 then
			if APPROVAL_STATUS = 1 then
				endlevel;
			else
				APPROVAL_STATUS = 0;
				savepartial();
				errmsg("The supervisor must approve this case in order for the enumerator to complete it");
				stop(0);
			endif;
		endif;
	endif;
else
	if HOUSEHOLD_STATUS in 2:4 then 
		if APPROVAL_STATUS = 1 then
			endlevel;
		else
			APPROVAL_STATUS = 0;
			savepartial();
			errmsg("The supervisor must approve this case in order for the enumerator to complete it");
			stop(0);
		endif;
	endif;
	
	if HOUSEHOLD_STATUS = 5 and NUMBER_OF_VISITS < 3 then
		errmsg("Refusal can only be accepted if there had been at least 3 attempts or visits");
		reenter;
	elseif HOUSEHOLD_STATUS = 5 and NUMBER_OF_VISITS = 3 then
		if APPROVAL_STATUS = 1 then
			endlevel;
		else
			APPROVAL_STATUS = 0;
			savepartial();
			errmsg("The supervisor must approve this case in order for the enumerator to complete it");
			stop(0);
		endif;
	endif;
endif;

PROC RESPONDENT_NAME

CheckBlank(RESPONDENT_NAME);
RESPONDENT_NAME = toupper(RESPONDENT_NAME);
PROC RESPONDENT_RELATIONSHIP
if RESPONDENT_RELATIONSHIP = 1 and RESPONDENT_NAME <> HOUSEHOLD_HEAD_NAMES then
 errmsg("If this Household head name cannot be different from the one given in the ID")
		select("Correct respondent Name", RESPONDENT_NAME);
 endif;
PROC B1

preproc

	// Automatically fill in person number
	B1 = curocc();
PROC B2

preproc

	//Set name of household head to be the first name in B2
	if curocc() = 1 then
		B2 = HOUSEHOLD_HEAD_NAMES;
	endif;

postproc
  
  CheckBlank(B2);
  	B2 = toupper(B2);

	//Consistency on the name of the household head.
	if curocc() = 1 and B2 <> HOUSEHOLD_HEAD_NAMES then
		errmsg("This Household head name cannot be different from the one given in the ID")
		select("Correct Heads Name", HOUSEHOLD_HEAD_NAMES);
	endif;

	//The name of the household member cannot be blank
	if B2 = "" then
		errmsg("Please enter name of the household member")
//		select("Enter name", B2, "Correct more people response", MORE_PEOPLE(curocc() - 1));
	endif;

	// Set occurrence labels for individual rosters to use name
	string occurrenceLabel = strip(B2);

	setocclabel(PERSON_ROSTER(curocc()), occurrenceLabel);
	setocclabel(DEMOGRAPHIC_ROSTER(curocc()), occurrenceLabel);

PROC ANYMORE_PEOPLE

// End roster if there are no more householding members to enter
	if ANYMORE_PEOPLE = 2 then
		savepartial();
		endgroup;
	endif;

PROC NUMBER_OF_HOUSEHOLD_MEMBERS
preproc

	NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
PROC DEMOGRAPHIC_ROSTER

numeric head, spouse;
head = seek(B5 = 1);
// Count number of heads of household so that we can ensure
// that there is exactly one head of household.

numeric numberOfHeads = count(DEMOGRAPHIC_ROSTER where B5 = 1);

if numberOfHeads <> 1 then
	errmsg("You have entered %d heads of household. Only one head of household is allowed",
			numberOfHeads);
	reenter B5(1);
endif;

// Count number of spouse of household head so that we can ensure
// that if spouses are more than 1 then it's polygamous marriage.

numeric numberOfSpouses = count(DEMOGRAPHIC_ROSTER where B5 = 2);

if numberOfSpouses > 1 then
	if not B6(head) = 3 then
		errmsg("%s has more than 1 spouse, they must be polygamously married",
				strip(B2(head)))
		select("Correct household head marital status", B6(head),
			   "Correct spouse relationship", B5(spouse),
			   "Correct spouse marital status", B6(spouse));
	endif;
	
	//Check each spouse in the household
	do spouse = 1 while spouse <= totocc(DEMOGRAPHIC_ROSTER)
		if B5(spouse) = 2 then
			if B5(spouse) <> 2 and not B6(spouse) = 3 then
				errmsg("%s is not the only spouse for %s. They must be polygamously married",
						strip(B2(spouse)), strip(B2(head)))
				select("Correct household head marital status", B6(head),
			   			"Correct spouse relationship", B5(spouse),
			   			"Correct spouse marital status", B6(spouse));
			endif;
		endif;
	enddo;	
endif;

// If household head is monogamously married then his/her spouse must be
// monogamously married and of different sex.

if B6(head) in 2:3,5 then
	//Check each spouse in the household
	do spouse = 1 while spouse <= totocc(DEMOGRAPHIC_ROSTER)
		if B4(spouse) = 2 then
			//Check for same sex
			if B5(spouse) = B5(head) then
				errmsg("If %s is %s's spouse, then they must be of opposite sex",
					   strip(B2(spouse)), strip(B2(head)))
				select("Correct household head sex", B3(head),
					   "Correct spouse relationship", B5(spouse),
					   "Correct spouse sex", B3(spouse));
			endif;
			//Check for different marrital status
			if B6(spouse) <> B6(head) then
				errmsg("If %s is %s's spouse, then they must have the same marital status",
					   strip(B2(spouse)), strip(B2(head)))
				select("Correct household head marital status", B6(head),
					   "Correct spouse relationship", B5(spouse),
					   "Correct spouse marital status", B6(spouse));
			endif;
		endif;
	enddo;
endif;
PROC B5
onfocus

	if curocc() = 1 then
		setvalueset(B5,B5_RELATIONSHIP_OF_HEAD);
	else
		setvalueset(B5,B5_RELATIONSHIP_TO_HEAD);
	endif;
	
postproc
// If household head is married then his/her spouse must be of different sex.
	if B5(curocc()) = 2 and B3(curocc()) = B3(1) then
		errmsg("If %s is %s's spouse, then they must be of opposite sex",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct household head sex", B3(1),
			   "Correct spouse relationship", B5(curocc()),
			   "Correct spouse sex", B3(curocc()));
	endif;

	if B6(1) = 1 and B5(curocc()) = 2 then
		errmsg("%s cannot be %s's spouse while %s is never married",
		strip(B2(curocc())), strip(B2(1)), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;

	if B6(1) = 4 and B5(curocc()) = 2 then
		errmsg("%s cannot be a spouse to %s while they are Living Together",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;

	if B6(1) = 5 and B5(curocc()) = 2 then
		errmsg("%s cannot be a spouse to %s while is Separated",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;
	if B6(1) = 6 and B5(curocc()) = 2 then
		errmsg("%s cannot be a spouse to %s while is Divorced",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;

	if B6(1) = 7 and B5(curocc()) = 2 then
		errmsg("%s cannot be a spouse to %s while is Widowed",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;

	if B6(1) = 9 and B5(curocc()) = 2 then
		errmsg("%s cannot be a spouse to %s while head marital status is unknown",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct head marital status",B6(1),"Correct relationship",B5(curocc()));
	endif;


PROC B3
// If household head is married then his/her spouse must be of different sex.
	if B5(curocc()) = 2 and B3(curocc()) = B3(1) then
		errmsg("If %s is %s's spouse, then they must be of opposite sex",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct household head sex", B3(1),
			   "Correct spouse relationship", B5(curocc()),
			   "Correct spouse sex", B3(curocc()));
	endif;
	
	if B3(1)<> SEX_OF_HOUSEHOLD_HEAD then
		errmsg("If %s is %s's the head, then they must have the same sex",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct household head sex", B3(1),
			   "Correct household head sex", SEX_OF_HOUSEHOLD_HEAD);
	endif;
		
PROC B4
	//Parent's age should be 12 years more than child's age.
	if B5(curocc()) = 4 and B4(1) < B4(curocc()) + MinAgeDiffBtwnChildAndParent then
		errmsg("%s's age should be 12 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct parent's age",B4(1),"Correct child's age",B4(curocc()));

	//Grandparent's age should be 24 years more than grandchild's age.
	elseif B5(curocc()) = 12 and B4(1) < B4(curocc()) + ( 2 * MinAgeDiffBtwnChildAndParent ) then
		errmsg("%s's age should be 24 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct grandparent's age",B4(1),"Correct grandchild's age",B4(curocc()));

	//Own parent's age should be 12 years more than household head's age.
	elseif B5(curocc()) = 8 and B4(curocc()) < B4(1) + MinAgeDiffBtwnChildAndParent then
		errmsg("%s's age should be 12 years less than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct household head's age",B4(1),"Correct own parent's age",B5(curocc()));

	//Grandparent's age should be 24 years more than grandchild's age.
	elseif B5(curocc()) = 11 and B4(curocc()) < B4(1) + ( 2 * MinAgeDiffBtwnChildAndParent ) then
		errmsg("%s's age should be 24 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct grandparent's age",B4(1),"Correct grandchild's age",B4(curocc()));
	endif;
PROC B6
postproc

	// Ensure that under 10 is never married
	if B4 < YoungestAgeMarriage and B6 <> 1 then
		errmsg("%s is %d years old and marital status is %s. Under %d years old must never be married.",
		strip(B2(curocc())), B4(curocc()), getlabel(B6_VS1, B6(curocc())),YoungestAgeMarriage)
		select("Correct Age", B4, "Correct Marital Status", B6);
	endif;

	//The Household head and Spouse should have the same marital status
	if B5(curocc()) = 2 then

		if B6(1) = 2 and B6(curocc()) <> 2 then
			errmsg("%s cannot be monogamously married to %s while their marital status is different",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct head marital status",B6(1),"Correct spouse marital status",B6(curocc()),"Correct relationship",B5(curocc()));

		elseif B6(1) = 3 and B6(curocc()) <> 3 then
			errmsg("%s cannot be polygamously married to %s while their marital status is different",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct head marital status",B6(1),"Correct spouse marital status",B6(curocc()),"Correct relationship",B5(curocc()));

		endif;

	endif;


	
	if B4(curocc()) < YoungestAgeMarriage and B5(curocc()) = 2  then
	  errmsg("%s cannot be a spouse to %s , because is too young.",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct age",B4(curocc()),"Correct relationship",B5(curocc()));
	endif;
	
	//if B5(curocc()) = 2 and B6(curocc())= 1 then 
	//  errmsg("%s cannot be a %s while never married", 
	//		strip( strip(B2(1))),B5(curocc()))
	//		select("Correct relationship",B5(curocc()),"Correct marrital status",B6(curocc()));
	//endif;
PROC B7
 if  B4 <= 10  and B7 > 1 then 
   errmsg("%s is too young to have attained any educational level",
		strip(B2(curocc())))
		select("Correct Current educational level",B7(curocc()));
   endif;
 
PROC B8
if RESPONDENT_RELATIONSHIP = 1 and curocc(B8)=1 and  B8 <> 1 then
	 errmsg("The Household head is the respondent, so the residential status cannot be different from present")
 	select("Correct Heads residential status", B8);
endif;

PROC B9

if B4(curocc())<= MinAgeforworking then
	skip to next;
endif;
PROC CQ01
postproc
if CQ01<> 1 then 
	skip to CQ73;
endif;
PROC CQ02

numberOfFields = CQ02;
PROC CQ04
preproc

	// Automatically fill in person number
	CQ04 = curocc();
PROC FIELD_LOCATION
postproc
  
  CheckBlank(FIELD_LOCATION);
  	FIELD_LOCATION(curocc()) = toupper(FIELD_LOCATION);

	// Set occurrence labels for individual rosters to use name
	string occurrenceLabel = strip(FIELD_LOCATION);

	setocclabel(LAND_OWNERSHIP_USE(curocc()), occurrenceLabel);
	setocclabel(SEED_USE_COSTS(curocc()), occurrenceLabel);
	setocclabel(INORG_FERTILIZER_COST(curocc()), occurrenceLabel);
	setocclabel(ORG_FERTILIZER_COST(curocc()), occurrenceLabel);
	setocclabel(LAND_PROTECTION(curocc()), occurrenceLabel);
	
PROC CQ06
if CQ06 <> 5 then
		skip to CQ07A;
	endif;
PROC CQ07A
preproc
if CQ05 <> 4 then 
 skip to CQ08A;
endif;
PROC CQ08A
preproc

if CQ05 <> 7 then
	skip to CQ09A;
endif;
PROC CQ09A
preproc

if CQ06 <> 1 then 
	skip to next;
endif;
PROC CQ09B

CheckBlank(CQ09B);

CQ09B = toupper(CQ09B);
PROC CQ09C


PROC CQ12
preproc
if CQ06(curocc()) = 2 then
	skip to next;
endif
PROC CQ13

checkblank(CQ13);
CQ13=toupper(CQ13);
PROC SEED_INFORMATION

 
PROC CQ17B

preproc

i = 1;
string cropsgrown = strip(CQ13(i));

do numeric counter = 1 while counter <= CQ02
    cropsgrown = concat(cropsgrown, strip(CQ13(i)));
    i=i+1;
enddo;

if curocc(CQ17B) = 1 and pos("A",cropsgrown)<> 0 then
	CQ17B = 1;
	COMBINATION_NAME(curocc()) = "Maize Local";
elseif pos("B",cropsgrown)<> 0 and curocc(CQ17B) = 2 then
	CQ17B = 2;
	COMBINATION_NAME(curocc()) = "Maize Hybrid";
elseif pos("C",cropsgrown)<> 0 and curocc(CQ17B) = 3 then
	CQ17B = 3;
	COMBINATION_NAME(curocc()) = "Maize OPV";
	set attributes(COMBINATION_NAME) protect;
elseif curocc(CQ17B) = 4 and pos("D",cropsgrown)<> 0 then
	CQ17B = 4;
	COMBINATION_NAME(curocc()) = "Wheat Local";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("E",cropsgrown)<> 0 and curocc(CQ17B) = 5 then
	CQ17B = 5;
	COMBINATION_NAME = "Wheat Hybrid";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("F",cropsgrown)<> 0 and curocc(CQ17B) = 6 then
	CQ17B = 6;
	COMBINATION_NAME = "Wheat OPV";
	//set attributesaaa(COMBINATION_NAME) protect;
elseif pos("G",cropsgrown)<> 0  and curocc(CQ17B) = 7 then
	CQ17B = 7;
	COMBINATION_NAME = "Sorgum Local";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("H",cropsgrown)<> 0 and curocc(CQ17B) = 8 then
	CQ17B = 8;
	COMBINATION_NAME = "Sorgum Hybrid";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("I",cropsgrown)<> 0 and curocc(CQ17B) = 9 then
	CQ17B = 9;
	COMBINATION_NAME = "Sorgum OPV";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("J",cropsgrown)<> 0 and curocc(CQ17B) = 10 then
	CQ17B = 10;
	COMBINATION_NAME = "Beans Local";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("K",cropsgrown)<> 0 and curocc(CQ17B) = 11 then
	CQ17B = 11;
	COMBINATION_NAME = "Beans Hybrid";
	//set attributes(COMBINATION_NAME) protect;;
elseif pos("L",cropsgrown)<> 0 and curocc(CQ17B) = 12 then
	CQ17B = 12;
	COMBINATION_NAME = "Beans OPV";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("M",cropsgrown)<> 0 and curocc(CQ17B) = 13 then
	CQ17B = 13;
	COMBINATION_NAME = "Peas Local";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("N",cropsgrown)<> 0 and curocc(CQ17B) = 14 then
	CQ17B = 14;
	COMBINATION_NAME = "Peas Hybrid";
	//set attributes(COMBINATION_NAME) protect;
elseif pos("L",cropsgrown)<> 0 and curocc(CQ17B) = 15 then
	CQ17B = 15;
	COMBINATION_NAME = "Peas OPV";
	//set attributes(COMBINATION_NAME) protect;
	
else
	skip to next;
endif;


PROC CQ18
if CQ18 = 7 then 
	skip to next;
endif;
PROC CQ22
preproc
if CQ20 = 2 then
	skip CQ30;
endif;

postproc
 if CQ22(curocc()) = 2 then
  skip to next;
 endif;
PROC CODES_IN_LETTERSIF
preproc

if CQ23(curocc()) = 1 then
	CODES_IN_LETTERSIF = 'N';
	set attributes(CODES_IN_LETTERSIF) protect;
elseif  CQ23(curocc()) = 2 then
	CODES_IN_LETTERSIF = 'L';
	set attributes(CODES_IN_LETTERSIF) protect;
elseif  CQ23(curocc()) = 3 then
	CODES_IN_LETTERSIF = 'P';
	set attributes(CODES_IN_LETTERSIF) protect;
else 
	CODES_IN_LETTERSIF = 'U';
	set attributes(CODES_IN_LETTERSIF) protect;
endif;

PROC CQ25

preproc

 i = 1;
string fertilizersused = strip(CQ25(i));

do numeric counter = 1 while counter < (curocc(INORG_FERTILIZER_COST))
    fertilizersused = concat(fertilizersused, strip(CQ25(i)));
    i=i+1;
enddo;
if  CODES_IN_LETTERSIF(curocc()) = 'N' then
	if pos('N',fertilizersused) <> 0 then
		skip to next;
	else
		CQ25(curocc()) = 'N';
		set attributes(CQ25) protect;
	endif;
elseif CODES_IN_LETTERSIF(curocc()) = 'L' then
	if pos('L',fertilizersused) <> 0 then
		skip to next;
	else
		CQ25(curocc()) = 'L';
		set attributes(CQ25) protect;
	endif;
elseif CODES_IN_LETTERSIF(curocc()) = 'P' then
	if pos('P',fertilizersused) <> 0 then
		skip to next;
	else
		CQ25(curocc()) = 'P';
		set attributes(CQ25) protect;
	endif;
elseif CODES_IN_LETTERSIF(curocc()) = 'U' then
	if pos('U',fertilizersused) <> 0 then
		skip to next;
	else
		CQ25(curocc()) = 'U';
		set attributes(CQ25) protect;
	endif;
endif;
PROC CQ30
preproc

if CQ28 = 2 then
	skip CQ36;
endif;

POSTPROC
 if CQ30(curocc()) = 2 then
  skip to next;
 endif;
PROC CODES_IN_LETTERSOF
preproc
if CQ23(curocc()) = 1 then
	CODES_IN_LETTERSOF = 'K';
	set attributes(CODES_IN_LETTERSOF) protect;
elseif  CQ23(curocc()) = 2 then
	CODES_IN_LETTERSOF = 'P';
	set attributes(CODES_IN_LETTERSOF) protect;
elseif  CQ23(curocc()) = 3 then
	CODES_IN_LETTERSOF = 'A';
	set attributes(CODES_IN_LETTERSOF) protect;
elseif  CQ23(curocc()) = 4 then
	CODES_IN_LETTERSOF = 'C';
	set attributes(CODES_IN_LETTERSOF) protect;
else 
	CODES_IN_LETTERSOF = 'S';
	set attributes(CODES_IN_LETTERSOF) protect;
endif;
PROC CQ32B


PROC CQ33
preproc

 i = 1;
string fertilizersusedOF = strip(CQ33(i));

do numeric counter = 1 while counter < (curocc(ORG_FERTILIZER_COST))
    fertilizersusedOF = concat(fertilizersusedOF, strip(CQ33(i)));
    i=i+1;
enddo;
if  CODES_IN_LETTERSOF(curocc()) = 'K' then
	if pos('K',fertilizersusedOF) <> 0 then
		skip to next;
	else
		CQ33(curocc()) = 'K';
		set attributes(CQ33) protect;
	endif;
elseif CODES_IN_LETTERSOF(curocc()) = 'P' then
	if pos('P',fertilizersusedOF) <> 0 then
		skip to next;
	else
		CQ33(curocc()) = 'P';
		set attributes(CQ33) protect;
	endif;
elseif CODES_IN_LETTERSOF(curocc()) = 'A' then
	if pos('A',fertilizersusedOF) <> 0 then
		skip to next;
	else
		CQ33(curocc()) = 'A';
		set attributes(CQ33) protect;
	endif;
elseif CODES_IN_LETTERSOF(curocc()) = 'C' then
	if pos('C',fertilizersusedOF) <> 0 then
		skip to next;
	else
		CQ33(curocc()) = 'C';
		set attributes(CQ33) protect;
	endif;
elseif CODES_IN_LETTERSOF(curocc()) = 'S' then
	if pos('S',fertilizersusedOF) <> 0 then
		skip to next;
	else
		CQ33(curocc()) = 'S';
		set attributes(CQ33) protect;
	endif;
endif;
PROC CQ34


PROC CQ35A
preproc
if CQ34(curocc())= 2 then
  skip to next;
 endif;
PROC CQ36
if CQ36 = 2 then
skip to CQ56A;
endif;
PROC CQ39

Preproc
if CQ06(curocc()) = 2 then
	skip to next;

elseif CQ37 = 2 AND CQ06(curocc()) <> 2  then 
 	skip to CQ45;
endif;

 
postproc
if CQ39(curocc()) = 2 then 
 skip to CQ45(curocc());
endif;
PROC CQ41
if CQ41 = 2 then
skip to CQ45
endif;
PROC CQ45
preproc
if CQ43 = 2 then
	skip to CQ51;
endif;
  
postproc

if CQ45 = 2 then
	skip to CQ51;
endif;
PROC CQ47
if CQ47 = 2 then
	skip to next;
endif;
PROC CQ51
preproc

if CQ49 = 2 then 
	skip to next;
endif;

postproc
 if CQ51 = 2 then
 	skip to next;
 endif;
PROC CQ53
if CQ53 = 2 then
	skip to next;
endif;
PROC LABOUR
preproc

UpdateOccurrenceLabelsForLABOURRoasters();
PROC CQ57
postproc 
if CQ57 = 1 and curocc(CQ57) = 1 then
	CQ57A = 'Land Preparation'
elseif CQ57 = 1 and curocc(CQ57) = 2 then
	CQ57A = 'Planting'
elseif CQ57 = 1 and curocc(CQ57) = 3 then
	CQ57A = ' Fertilizer  Application'
elseif CQ57 = 1 and curocc(CQ57) = 4 then
	CQ57A = '1st Weeding'
elseif CQ57 = 1 and curocc(CQ57) = 5 then
	CQ57A = 'Application of plant protection products'
elseif CQ57 = 1 and curocc(CQ57) = 6 then
	CQ57A = '2nd Weeding'
elseif CQ57 = 1 and curocc(CQ57) = 7 then
	CQ57A = 'Harvesting'
elseif CQ57 = 1 and curocc(CQ57) = 8 then
	CQ57A = 'Transporting the crop from the field to homestead'
elseif CQ57 = 1 and curocc(CQ57) = 9 then
	CQ57A = 'Shelling and Packing'
elseif CQ57 = 1 and curocc(CQ57) = 10 then
	CQ57A = 'Transporting the crop from the holding to the point of selling'
elseif CQ57 = 1 and curocc(CQ57) = 11 then
	CQ57A = 'Other, specify:'
elseif CQ57 = 2 then
	CQ58A(curocc()) = 0; CQ58B(curocc()) = 0; CQ58C(curocc()) = 0;
	CQ59A(curocc()) = 0; CQ59B(curocc()) = 0; CQ59C(curocc()) = 0;
	skip to next;
endif;

PROC CQ58A
preproc
if CQ56A = 2 then
 skip to CQ59A;
endif;

postproc

NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
 if CQ58A > NUMBER_OF_HOUSEHOLD_MEMBERS then
 	errmsg("This cannot be greater than the nummber of household memebers, please reenter");
 	reenter;
 endif
PROC CQ58C

postproc
if CQ58C > 24 then
	errmsg("A day goes to up to 24 hours only")
		select("Correct number of hours worked", CQ58C);
		reenter;
endif;
PROC CQ59A

preproc
if CQ56B = 2 then
 skip to next;
endif;
PROC CQ59C
postproc
if CQ59C(curocc()) > 24 then
	errmsg("A day goes to up to 24 hours only")
		select("Correct number of hours worked", CQ59C(curocc()));
		reenter;
endif;
PROC AGRIC_SERVICES
preproc
UpdateOccurrenceLabelsForAGRICSERVICESRoasters();

if CQ61 = 2 THEN
	skip to CROP_PRODUCTION_SALES;
endif;

PROC CQ64

postproc 
if CQ64(curocc()) = 1 and curocc(CQ64) = 1 then
	CQ63 = 'Ploughting eg. Hiring tractor/drought animals'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 2 then
	CQ63 = 'Other land preparation_seeding'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 3 then
	CQ63 = 'Application of fertilizer'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 4 then
	CQ63 = 'Application of plant protection products'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 5 then
	CQ63 = 'Harvesting'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 6 then
	CQ63 = 'Transport:from the field to holding,to market ect'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 7 then
	CQ63 = 'Harvesting'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 8 then
	CQ63 = 'Threshing_shelling'
elseif CQ64(curocc()) = 1 and curocc(CQ64) = 9 then
	CQ63 = 'Other, specify:'
else
//if CQ64(curocc()) = 2 then
	CQ65A= 0.00; CQ65B =0.00;
	skip to next;
endif;
PROC CROP_PRODUCTION_SALES
preproc
UpdateOccurrenceLabelsForCROPPRODUCTIONSALESRoasters();
PROC CROP_CODE
{numberOfCrops = length(strip(CQ13(i)));

if j < numberOfCrops then
	j = j + 1;
	next;
else
	numberOfFields = numberOfFields - 1;
	j = 1;
endif;

if numberOfFields <> 0 then
	i = i + 1;
else
	endgroup;
endif;

}
preproc

i = 1;
string cropsgrown = strip(CQ13(i));

do numeric counter = 1 while counter <= CQ02
    cropsgrown = concat(cropsgrown, strip(CQ13(i)));
    i=i+1;
enddo;


//numberOfCrops = length(strip(CQ13(i)));



if curocc(CROP_CODE) = 1 and (pos("A",cropsgrown)<> 0 OR pos("B",cropsgrown)<> 0 OR pos("C",cropsgrown)<> 0 )then
	CROP_CODE = 1;
	CQ67 = "Maize";
elseif (pos("D",cropsgrown)<> 0 OR pos("E",cropsgrown)<> 0 OR pos("F",cropsgrown)<> 0 ) and curocc(CROP_CODE) = 2 then
	CROP_CODE = 2;
	CQ67 = "Wheat";
elseif (pos("G",cropsgrown)<> 0 OR pos("H",cropsgrown)<> 0 OR pos("I",cropsgrown)<> 0 ) and curocc(CROP_CODE) = 3 then
	CROP_CODE = 3;
	CQ67 = "Sorgum";
elseif (pos("J",cropsgrown)<> 0 OR pos("K",cropsgrown)<> 0 OR pos("L",cropsgrown)<> 0 ) and curocc(CROP_CODE) = 4 then
	CROP_CODE = 4;
	CQ67 = "Beans";
elseif (pos("M",cropsgrown)<> 0 OR pos("N",cropsgrown)<> 0 OR pos("O",cropsgrown)<> 0 )and curocc(CROP_CODE) = 5 then
	CROP_CODE = 5;
	CQ67 = "Peas";
else
	skip to next;
endif;

PROC CQ68A
if CQ68A(curocc())= 0 then
	skip to next;
endif;
PROC CQ69A
if CQ69A(curocc()) = 0 then
	skip to next;
endif;
PROC CQ69B


PROC FQ_MACHINERY_CROPS

	
PROC MACHINERY_EQUIPMENT_CROP
preproc
UpdateOccurrenceLabelsForMACHINERYEQUIPMENTCROPRoasters();

if FQ_MACHINERY_CROPS = 2 then
	skip to IRRIGATION_EQUIPMENT;
endif;
PROC FQ02


postproc 
if FQ02(curocc()) = 1 and curocc(FQ02) = 1 then
	FQ03 = 'Hand Hoe'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 2 then
	FQ03 = 'Ox drawn Plough'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 3 then
	FQ03 = 'Tractor drawn Plough'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 4 then
	FQ03 = 'Tractor'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 5 then
	FQ03 = 'Planter'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 6 then
	FQ03 = 'Cultivator'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 7 then
	FQ03 = 'Harrow'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 8 then
	FQ03 = 'Harvester'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 9 then
	FQ03 = 'Hand driven Tractor'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 10 then
	FQ03 = 'Sheller'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 11 then
	FQ03 = 'Ripper'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 12 then
	FQ03 = 'Hammer mill'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 13 then
	FQ03 = 'Hand hammer mill'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 14 then
	FQ03 = 'Rump press/Oil expeller'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 15 then
	FQ03 = 'Sprayer'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 16 then
	FQ03 = 'Scotch carts'
elseif FQ02(curocc()) = 1 and curocc(FQ02) = 17 then
	FQ03 = 'Other (specify)__'
elseif FQ02 = 2 then
	skip to next;
endif;
PROC FQ05

if FQ05(curocc()) = 2 then
 skip to next;
endif;
PROC IRRIGATION_EQUIPMENT
preproc
UpdateOccurrenceLabelsForIRRIGATIONEQUIPMENTRoasters();

if FQ_IRRIGATION_EQUIPMENT = 2 then
	skip to FQ_MACHINERY_LIVESTOCK;
endif;
PROC FQ03_IRRIGATION


postproc
if FQ03_IRRIGATION(curocc()) = 1 and curocc(FQ03_IRRIGATION) = 1 then
	FQ_IRRIGATION = 'Water pump/borehole';
elseif FQ03_IRRIGATION(curocc()) = 1 and curocc(FQ03_IRRIGATION) = 2 then
	FQ_IRRIGATION = 'Treadle pump';
elseif FQ03_IRRIGATION(curocc()) = 1 and curocc(FQ03_IRRIGATION) = 3 then
	FQ_IRRIGATION = 'Water tank';
elseif FQ03_IRRIGATION(curocc()) = 1 and curocc(FQ03_IRRIGATION) = 4 then
	FQ_IRRIGATION = 'Sprinkler';
elseif FQ03_IRRIGATION(curocc()) = 1 and curocc(FQ03_IRRIGATION) = 5 then
	FQ_IRRIGATION = 'Other (specify)____';
elseif FQ03_IRRIGATION(curocc()) = 2 then
	skip to next;
endif;
PROC FQ05_IRRIGATION

if FQ05_IRRIGATION(curocc()) = 2 then
  skip to next;
endif;
PROC FQ_MACHINERY_LIVESTOCK

PROC MACHINERY_EQUIPEMENT_LIVESTOCK
preproc
UpdateOccurrenceLabelsForMACHINERYEQUIPEMENTLIVESTOCKRoasters();

if FQ_MACHINERY_LIVESTOCK = 2 then
	skip to FARM_BUILDINGS_INFRASTRUCTURE;
endif;
PROC FQ03_LIVESTOCK


postproc
if FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 1 then
	FQ02_LIVESTOCK = 'Feed mixer'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 2 then
	FQ02_LIVESTOCK = 'Crusher'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 3 then
	FQ02_LIVESTOCK = 'Feed and water trough'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 4 then
	FQ02_LIVESTOCK = 'Milking equipment'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 5 then
	FQ02_LIVESTOCK = 'Castration equipment'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 6 then
	FQ02_LIVESTOCK = 'Dehorning equipment'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 7 then
	FQ02_LIVESTOCK = 'Vet. related tools and equipment'
elseif FQ03_LIVESTOCK(curocc()) = 1 and curocc(FQ03_LIVESTOCK) = 8 then
	FQ02_LIVESTOCK = 'Other (specify)____'
elseif FQ03_LIVESTOCK(curocc()) = 2 then
	skip to next;
endif;
PROC FQ05_LIVESTOCK
if FQ05_LIVESTOCK= 2 then
 skip to next;
 endif
PROC FARM_BUILDINGS_INFRASTRUCTURE
preproc
UpdateOccurrenceLabelsForFARMBUILDINGSINFRASTRUCTURERoasters()
PROC FQ11_BUILDINGS


postproc
if FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 1 then
	FQ10_BUILDINGS = 'Storage facility (warehouses, granaries, etc.)';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 2 then
	FQ10_BUILDINGS = 'Poultry houses';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 3 then
	FQ10_BUILDINGS = 'Cow-shed';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 4 then
	FQ10_BUILDINGS = 'Kraal';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 5 then
	FQ10_BUILDINGS = 'Fence';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 6 then
	FQ10_BUILDINGS = 'Reservoir';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 7 then
	FQ10_BUILDINGS = 'Farm house (to house workers)';
elseif FQ11_BUILDINGS(curocc()) = 1 and curocc(FQ11_BUILDINGS) = 8 then
	set attributes(FQ10_BUILDINGS) native;
	SKIP TO FQ10_BUILDINGS
elseif FQ11_BUILDINGS(curocc()) = 2 then
	skip to next;
endif;
PROC FINAL_RESULT_CODE

if demode() = add then
	if HH_LATITUDE = notappl then
		if FINAL_RESULT_CODE = 1 then
			errmsg("You cannot save the household without its GPS coordinates. Please capture the coordinates.");
			reenter;
		endif;
	endif;
endif;
PROC PARTIALLY_COMPLETE_REASON

CheckBlank(PARTIALLY_COMPLETE_REASON);
HOUSEHOLD_HEAD_NAMES = toupper(PARTIALLY_COMPLETE_REASON);
