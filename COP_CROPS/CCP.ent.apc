{Application 'CCP' logic file generated by CSPro}
PROC GLOBAL

numeric CensusYear = 2020;
numeric CensusMonth = 4;
numeric YoungestAgeMarriage = 10;
numeric MaxNumOfYrsOutsideLesotho = 3;
numeric MinAgeDiffBtwnChildAndParent = 12;
numeric MinRetirementAge = 24;
numeric MinAgeForFertility = 12;
numeric MaxAgeForFertility = 50;
numeric MinAgeForEducation = 3;
numeric MinAgeForEconomicActivity = 10;
numeric MinAgeWorkRSA = 5;
numeric i = 1, j = 1, numberOfCrops, numberOfFields;

// declare arrays dynamic value set
array numeric codes(100);
array string labels(100);
array numeric respondentCodes(100);
array string respondentLabels(100);

function CheckBlank(string value)
	if value = "" then
		errmsg("The field cannot be blank");
		reenter;
	endif;
end;
function UpdateOccurrenceLabels()
	// Fill in occurrence labels for individual rosters
	// in case we are coming into a partially saved case or
	// are in modify mode in which case the names have been entered
	// but are not yet set in case tree since we have not yet gotten
	// to field B2 (names).
{	numeric i;
	do i = 1 while i <= maxocc(PERSON_ROSTER)

		string occurrenceLabel;
		if i <= totocc(PERSON_ROSTER) then
			occurrenceLabel = strip(B2(i));
		else
			// Work around bug in CSPro where when entering a new case
			// the occurrence labels from the previous case are still there.
			// This will replace the occurrence label with the row number 1,2,3...
			occurrenceLabel = maketext("%d",i);
		endif;

		setocclabel(PERSON_ROSTER(i), occurrenceLabel);
		setocclabel(DEMOGRAPHIC_ROSTER(i), occurrenceLabel);
		setocclabel(DISABILITY_ROSTER(i), occurrenceLabel);
		setocclabel(EDUCATION_ROSTER(i), occurrenceLabel);
		setocclabel(ECONOMIC_ACTIVITY_ROSTER(i), occurrenceLabel);
		setocclabel(FERTILITY_ROSTER(i), occurrenceLabel);

	enddo;
}	
end;




PROC CROPSCOSTOFPRODUCTION_FF

PROC HOUSEHOLD_HEAD_NAMES

CheckBlank(HOUSEHOLD_HEAD_NAMES);
	HOUSEHOLD_HEAD_NAMES = toupper(HOUSEHOLD_HEAD_NAMES);


PROC B1

preproc

	// Automatically fill in person number
	B1 = curocc();
PROC B2

preproc

	//Set name of household head to be the first name in B2
	if curocc() = 1 then
		B2 = HOUSEHOLD_HEAD_NAMES;
	endif;

postproc

	B2 = toupper(B2);

	//Consistency on the name of the household head.
	if curocc() = 1 and B2 <> HOUSEHOLD_HEAD_NAMES then
		errmsg("This Household head name cannot be different from the one given in the ID")
		select("Correct Heads Name", HOUSEHOLD_HEAD_NAMES);
	endif;

	//The name of the household member cannot be blank
	if B2 = "" then
		errmsg("Please enter name of the household member")
//		select("Enter name", B2, "Correct more people response", MORE_PEOPLE(curocc() - 1));
	endif;

	// Set occurrence labels for individual rosters to use name
	string occurrenceLabel = strip(B2);

	setocclabel(PERSON_ROSTER(curocc()), occurrenceLabel);
	setocclabel(DEMOGRAPHIC_ROSTER(curocc()), occurrenceLabel);

PROC ANYMORE_PEOPLE

// End roster if there are no more household members to enter
	if ANYMORE_PEOPLE = 2 then
		savepartial();
		endgroup;
	endif;

PROC NUMBER_OF_HOUSEHOLD_MEMBERS
preproc

	NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
PROC B9

PROC CQ02

numberOfFields = CQ02;
PROC CQ04
preproc

	// Automatically fill in person number
	CQ04 = curocc();
PROC CQ09B_OTHER
postproc
 CheckBlank(CQ09B_OTHER)
PROC CQ09C


PROC FIELD_NUMBER

preproc
	FIELD_NUMBER = i;
PROC SEED_TYPE

numberOfCrops = length(strip(CQ13(i)));

if j < numberOfCrops then
	j = j + 1;
	next;
else
	numberOfFields = numberOfFields - 1;
	j = 1;
endif;

if numberOfFields <> 0 then
	i = i + 1;
else
	endgroup;
endif;
PROC CQ57
postproc 
if CQ57 = 2 then
	skip to next;
endif;

PROC CQ57A

preproc
if CQ57 = 1 then 

//strip(CQ57A) = getocclabel($(curocc($)));

endif;
