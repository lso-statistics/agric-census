{Application 'COP_DATAENTRY' logic file generated by CSPro}
{Application 'COP_DATAENTRY' logic file generated by CSPro}
PROC GLOBAL
// ------------------------------VARIABLE TO HELP DETERMINE IF HOUSEHOLD HAS THESE TYPES OF LIVESTOCK---------

numeric CensusYear = 2020;
numeric CensusMonth = 4;
numeric YoungestAgeMarriage = 12;
numeric MaxNumOfYrsOutsideLesotho = 3;
numeric MinAgeDiffBtwnChildAndParent = 12;
numeric MinRetirementAge = 24;
numeric MinAgeForFertility = 12;
numeric MaxAgeForFertility = 50;
numeric MinAgeForEducation = 3;
numeric MinAgeForEconomicActivity = 10;
numeric MinAgeWorkRSA = 5;
numeric i = 1, j = 1, numberOfCrops, numberOfFields;
numeric index_supplements = 1;
string supplents_used;

numeric totalLivestockStock = 0;//to obtain the sum of (LQ04+LQ05A+LQ06)
numeric totalSoldForCash = 0; //to obtain the difference between (LQ04+LQ05A+LQ06) and LQ08 = ((LQ04+LQ05A+LQ06) - LQ08)

// declare arrays dynamic value set
array numeric codes(100);
array string labels(100);
array string alpha_codes(100);//string codes for dynamic value sets
string crops;
array numeric respondentCodes(100);
array string respondentLabels(100);

//Max of 50 people in a household with 2 (person number and person name) columns to be displayed.
array string personsArray(50, 2);
array string deceasedArray(30, 1);

// Show list of entries in persons roster in a dialog
// and let interviewer pick one.
// Returns the row number of the person that was picked
// or zero if the dialog was cancelled.
function PickFromPERSON_ROSTER()
	numeric person;

	do person = 1 while person <= totocc(PERSON_ROSTER);
		personsArray(person, 1) =  maketext("%d", visualvalue(B1(person)));
		personsArray(person, 2) =  strip(B2(person));
	enddo;

	personsArray(person, 1) = "";
	numeric picked = showarray(personsArray, title("Person Number", "Names"));
	PickFromPERSON_ROSTER = picked;
end;
//------------------------------------------------------------------------------------------

function UpdateOccurrenceLabels()
	// Fill in occurrence labels for individual rosters
	// in case we are coming into a partially saved case or
	// are in modify mode in which case the names have been entered
	// but are not yet set in case tree since we have not yet gotten
	// to field B2 (names).
	//numeric i;
	do i = 1 while i <= maxocc(PERSON_ROSTER)

		string occurrenceLabel;
		if i <= totocc(PERSON_ROSTER) then
			occurrenceLabel = strip(B2(i));
		else
			// Work around bug in CSPro where when entering a new case
			// the occurrence labels from the previous case are still there.
			// This will replace the occurrence label with the row number 1,2,3...
			occurrenceLabel = maketext("%d",i);
		endif;

		setocclabel(PERSON_ROSTER(i), occurrenceLabel);
		setocclabel(DEMOGRAPHIC_ROSTER(i), occurrenceLabel);
		
	enddo;

end;
//---------------------set occurrence label for livestock stock--------------------------------------
function UpdateOccurrenceLabelsForLivestockStock()
	 //set occurrence label for livestock stock raised based on the current row of the roster
	 setocclabel(LIVESTOCK_STOCK(1), "Cattle");
	 setocclabel(LIVESTOCK_STOCK(2), "Calves");
	 setocclabel(LIVESTOCK_STOCK(3), "Improved dairy cattle");
	 setocclabel(LIVESTOCK_STOCK(4), "Improve beef cattle");
	 setocclabel(LIVESTOCK_STOCK(5), "Oxens");
	 setocclabel(LIVESTOCK_STOCK(6), "Indegenous Cattle");
	 setocclabel(LIVESTOCK_STOCK(7), "Sheep");
	 setocclabel(LIVESTOCK_STOCK(8), "Improve Sheep");
	 setocclabel(LIVESTOCK_STOCK(9), "Indegenous Sheep");
	 setocclabel(LIVESTOCK_STOCK(10), "Goats");
	 setocclabel(LIVESTOCK_STOCK(11), "Improved Goats");
	 setocclabel(LIVESTOCK_STOCK(12), "Indegenous Goats");
	 setocclabel(LIVESTOCK_STOCK(13), "Pigs");
	 setocclabel(LIVESTOCK_STOCK(14), "Improved Pigs");
	 setocclabel(LIVESTOCK_STOCK(15), "Indegenous Pigs"); 
	 setocclabel(LIVESTOCK_STOCK(16), "Horses");
	 setocclabel(LIVESTOCK_STOCK(17), "Donkeys");
	 setocclabel(LIVESTOCK_STOCK(18), "Mules");
	 setocclabel(LIVESTOCK_STOCK(19), "Chickens");
	 setocclabel(LIVESTOCK_STOCK(20), "Broilers");
	 setocclabel(LIVESTOCK_STOCK(21), "Layers");
	 setocclabel(LIVESTOCK_STOCK(22), "Indigenous Chickens");
end;
//---------USED SUPLEMENTS FOR SUMMER FEEDS----------------
//----------------------set occurrence label used suplement for dairy cattle--------------------------
function UpdateOccurrenceSupplimentForDairyCattleSummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_DAIRY_CATTLE(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for all cattle--------------------------
function UpdateOccurrenceSupplimentForAllCattleSummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLE000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for sheep--------------------------
function UpdateOccurrenceSupplimentForSheepSummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_SHEEP000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_SHEEP000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for goats--------------------------
function UpdateOccurrenceSupplimentForGoatsSummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_GOATS000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_GOATS000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_GOATS000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_GOATS000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_GOATS000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_GOATS000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_GOATS000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_GOATS000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_GOATS000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_GOATS000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for poultry--------------------------
function UpdateOccurrenceSupplimentForPoultrySummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_POULTRY000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_POULTRY000(10), "Mineral Block");
end;
//---------USED SUPLEMENTS FOR WINTER FEEDS----------------
//----------------------set occurrence label used suplement for dairy cattle--------------------------
function UpdateOccurrenceSupplimentForDairyCattleWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_TYPW000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_TYPW000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_TYPW000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_TYPW000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_TYPW000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_TYPW000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_TYPW000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_TYPW000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_TYPW000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_TYPW000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for all cattle--------------------------
function UpdateOccurrenceSupplimentForAllCattleWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_ALL_CATTLEW000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for sheep--------------------------
function UpdateOccurrenceSupplimentForSheepWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_SHEEPW000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for goats--------------------------
function UpdateOccurrenceSupplimentForGoatsWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_GOATW000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_GOATW000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_GOATW000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_GOATW000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_GOATW000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_GOATW000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_GOATW000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_GOATW000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_GOATW000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_GOATW000(10), "Mineral Block");
end;
//----------------------set occurrence label used suplement for poultry--------------------------
function UpdateOccurrenceSupplimentForPoultryWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(1), "Fodder/Hay/Grass");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(2), "Crop Residue");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(3), "Feed Concentrete");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(4), "Dairy Meal");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(5), "Poultry Meal");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(6), "Sheep Palets");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(7), "Moroko");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(8), "Seameal/Bran");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(9), "Salt");
	 setocclabel(USED_SUPPLIMENT_POULTRYW000(10), "Mineral Block");
end;
//----------------------set occurrence label used for all suplements--------------------------
function UpdateOccurrenceForAllSuppliment()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(ALL_SUPPLEMENTS000(1), "Fodder/Hay/Grass");
	 setocclabel(ALL_SUPPLEMENTS000(2), "Crop Residue");
	 setocclabel(ALL_SUPPLEMENTS000(3), "Feed Concentrete");
	 setocclabel(ALL_SUPPLEMENTS000(4), "Dairy Meal");
	 setocclabel(ALL_SUPPLEMENTS000(5), "Poultry Meal");
	 setocclabel(ALL_SUPPLEMENTS000(6), "Sheep Palets");
	 setocclabel(ALL_SUPPLEMENTS000(7), "Moroko");
	 setocclabel(ALL_SUPPLEMENTS000(8), "Seameal/Bran");
	 setocclabel(ALL_SUPPLEMENTS000(9), "Salt");
	 setocclabel(ALL_SUPPLEMENTS000(10), "Mineral Block");
end;
//----------LIVESTOCK MANAGEMENT-----------
//----------------------set occurrence label used suplement for poultry--------------------------
function UpdateOccurrenceSupplimentForLivestockManagement()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(LIVESTOCK_MANAGEMENT_AND_HEAT000(1), "Cattle");
	 setocclabel(LIVESTOCK_MANAGEMENT_AND_HEAT000(2), "Sheep");
	 setocclabel(LIVESTOCK_MANAGEMENT_AND_HEAT000(3), "Goats");
	 setocclabel(LIVESTOCK_MANAGEMENT_AND_HEAT000(4), "Poultry");
end;
//---------LIVESTOCK PRODUCTS---------------
//----------------------set occurrence label for livestock products--------------------------
function UpdateOccurrenceLivestockProductsSummer()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(TABLE_L7(1), "Cow milk");
	 setocclabel(TABLE_L7(2), "Chicken eggs");
	 setocclabel(TABLE_L7(3), "Meat from cattle");
	 setocclabel(TABLE_L7(4), "Meat from sheep");
	 setocclabel(TABLE_L7(5), "Meat from goats");
	 setocclabel(TABLE_L7(6), "Chickens for meat (live/slaughtered)");
	 setocclabel(TABLE_L7(7), "Skins & hides");
end;
//----------------------set occurrence label for livestock products--------------------------
function UpdateOccurrenceLivestockProductsWinter()
	//set occurrence label used suplement for dairy cattle based on the current row of the roster
	 setocclabel(TABLE_L8(1), "Cow milk");
	 setocclabel(TABLE_L8(2), "Chicken eggs");
	 setocclabel(TABLE_L8(3), "Meat from cattle");
	 setocclabel(TABLE_L8(4), "Meat from sheep");
	 setocclabel(TABLE_L8(5), "Meat from goats");
	 setocclabel(TABLE_L8(6), "Chickens for meat (live/slaughtered)");
	 setocclabel(TABLE_L8(7), "Skins & hides");
end;	
//----------------------------------------------------------------------------------------------------
function DeletePerson()

	numeric person = PickFromPERSON_ROSTER();
	if person > 0 then
		numeric choice = errmsg("Do you really want to delete %s's record?", strip(B2(person)))
		select("YES",CONTINUE, "NO",CONTINUE);

		if choice = 1 then

			if person = 1 then
				errmsg("You cannot delete %s's record because %s is Household head", strip(B2(person)), strip(B2(person)));

			else
				delete (PERSON_ROSTER(person));

				if person <= totocc(DEMOGRAPHIC_ROSTER) then
					delete (DEMOGRAPHIC_ROSTER(person));
				endif;
				NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
				UpdateOccurrenceLabels();

				//numeric i;
				do i = person while i <= totocc(PERSON_ROSTER);
					B1(i) = i;
				enddo;

				numeric lastPerson = totocc(PERSON_ROSTER);
				move to ANYMORE_PEOPLE(lastPerson) advance;

			endif;

		endif;

	endif;

end;

//a function to display date the application was published. This will help us to identify the latest application
function showVersion()

	numeric publishDay = int(publishdate() / 1000000); // ignore the time
	errmsg("Application published on: %d", publishDay);
	//if datediff(publishDay,sysdate("YYYYMMDD")) > 20 then
	//    errmsg("This program expires after 20 days. Sync to get a new program.");	    
	//endif; 
end;

//-------------------------------------------------------------------------------------------------------

//a function to capture the gps coordinates of the household
function captureHH_Coordinates()
	if gps(open) = 1 then //try to open a gps connection and if successful
		if gps(read, 120) then //take the readings from the gps
			if gps(readlast) <> 1 then //if the was nothing read from the gps
				errmsg("GPS signal could not be acquired. Please stand outside the building or away from trees as this might block satellite signals");
			else
				HH_LATITUDE = gps(latitude);
				HH_LONGITUDE = gps(longitude);
				HH_ALTITUDE = gps(altitude);
				HH_SATELLITES = gps(satellites);
				HH_ACCURACY = gps(accuracy);
				HH_READ_TIME = gps(readtime);
				errmsg("Successfully recorded the household GPS coordinates");
			endif;
		endif;
		gps(close);
	else
		errmsg("The GPS functionality is not enabled on this tablet. Please enable GPS (Location) on your device and try again");
		exit;
	endif;
end;
//------------------------------DETERMINES IF FIELDS ARE BLANK------------------------------------------------
Function CheckBlank(string value)
	if value = "" then
		errmsg("The field cannot be blank");
		reenter;
	endif;
end;

{PROC LQ20C_OTHER
//IF THE GIVEN ANSWER IS NOT EQUAL TO 4 SKIP OTHER MAIN SOURCE TO LQ21A ELSE SKIP TO OTHER MAIN SOURCE
if curocc($) = 1 then
	if LQ20C(curocc($)) = 5 then
		CheckBlank(LQ20C_OTHER);
	endif;
elseif curocc($) = 2 then
	if LQ20C(curocc($)) = 5 then
		CheckBlank(LQ20C_OTHER);
	endif;
elseif curocc($) = 3 then
	if LQ20C(curocc($)) = 5 then
		CheckBlank(LQ20C_OTHER);
	endif;
elseif curocc($) = 4 then
	if LQ20C(curocc($)) = 5 then
		CheckBlank(LQ20C_OTHER);
	endif;	
endif;}
{PROC LQ15S_ALL_CATTLE
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_CATTLE(curocc($));
endif;
PROC LQ15S_ALL_CATTLEW
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_CATTLEW(curocc($));
endif;
PROC LQ15S_ALL_GOATS
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_GOATS(curocc($));
endif;
PROC LQ15S_ALL_GOATW
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_GOATW(curocc($));
endif;
PROC LQ15S_ALL_POULTRY
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_POULTRY(curocc($));
endif;
PROC LQ15S_ALL_POULTRYW
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_POULTRYW(curocc($));
endif;
PROC LQ15S_ALL_SHEEP
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_SHEEP(curocc($));
endif;
PROC LQ15S_ALL_SHEEPW
//skip to quantity
if $ = 1 then
	skip to LQ17SA_ALL_SHEEPW(curocc($));
endif;
PROC LQ15W
//skip to quantity
if $ = 1 then
	skip to LQ17WA(curocc($));
endif;
PROC LQ16S_ALL_CATTLE
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10S_SHEEP;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_CATTLEW
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10W_SHEEP;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_GOATS
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10S_POULTRY;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_GOATW
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10W_POULTRY;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_POULTRY
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10W_DAIRYCATTLE;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_POULTRYW
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ19A(1);//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_SHEEP
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10S_GOATS;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16S_ALL_SHEEPW
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10W_GOATS;//skip to suplements used for sheep
		endif;
endif;
PROC LQ16W
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ10W_ALLCATTLE;//skip to suplements used for sheep
		endif;
endif;
PROC LQ18S_ALL_CATTLE
savepartial();
PROC LQ18S_ALL_CATTLEW
savepartial();
PROC LQ18S_ALL_GOATW
savepartial();
PROC LQ18S_ALL_POULTRY
savepartial();
PROC LQ18S_ALL_POULTRYW
savepartial();
PROC LQ18S_ALL_SHEEP
savepartial();
PROC LQ18S_ALL_SHEEPW
savepartial();
PROC LQ18W
savepartial();}
PROC COP_DICT_FF

PROC COP_DICT_QUEST
preproc
//--------SUMMER SUPLEMENTS------------
//---------------------set occurrence label for livestock stock--------------------------------------
UpdateOccurrenceLabelsForLivestockStock();
//----------------------set occurrence label used suplement for dairy cattle--------------------------
UpdateOccurrenceSupplimentForDairyCattleSummer();
//----------------------set occurrence label used suplement for all cattle--------------------------
UpdateOccurrenceSupplimentForAllCattleSummer();
//----------------------set occurrence label used suplement for sheep--------------------------
UpdateOccurrenceSupplimentForSheepSummer();
//----------------------set occurrence label used suplement for goats--------------------------
UpdateOccurrenceSupplimentForGoatsSummer();
//----------------------set occurrence label used suplement for poultry--------------------------
UpdateOccurrenceSupplimentForPoultrySummer();

//--------WINTER SUPLEMENTS------------
//----------------------set occurrence label used suplement for dairy cattle--------------------------
UpdateOccurrenceSupplimentForDairyCattleWinter();
//----------------------set occurrence label used suplement for all cattle--------------------------
UpdateOccurrenceSupplimentForAllCattleWinter();
//----------------------set occurrence label used suplement for sheep--------------------------
UpdateOccurrenceSupplimentForSheepWinter();
//----------------------set occurrence label used suplement for goats--------------------------
UpdateOccurrenceSupplimentForGoatsWinter();
//----------------------set occurrence label used suplement for poultry--------------------------
UpdateOccurrenceSupplimentForPoultryWinter();
//----------ALL SUPPLEMENTS----------------
UpdateOccurrenceForAllSuppliment();
//----------LIVESTOCK MANAGEMENT-----------
//----------------------set occurrence label used suplement for poultry--------------------------
UpdateOccurrenceSupplimentForLivestockManagement();
//---------LIVESTOCK PRODUCTS---------------
//----------------------set occurrence label for livestock products--------------------------
UpdateOccurrenceLivestockProductsSummer();
//----------------------set occurrence label for livestock products--------------------------
UpdateOccurrenceLivestockProductsWinter();
PROC INTERVIEW_DATE
preproc
if demode() = add then
		INTERVIEW_DATE = edit("99/99/9999", sysdate("DDMMYYYY"));
		noinput;
endif;
PROC HOUSEHOLD_HEAD_NAMES
CheckBlank(HOUSEHOLD_HEAD_NAMES);// CHECKS IF THE FIELD IS BLANK
	HOUSEHOLD_HEAD_NAMES = toupper(HOUSEHOLD_HEAD_NAMES);
PROC NUMBER_OF_VISITS
preproc

	NUMBER_OF_VISITS = totocc(VISIT_DATE000);
PROC RESPONDENT_NAME

CheckBlank(RESPONDENT_NAME);
RESPONDENT_NAME = toupper(RESPONDENT_NAME);


savepartial();
PROC RESPONDENT_RELATIONSHIP
if RESPONDENT_RELATIONSHIP = 1 and RESPONDENT_NAME <> HOUSEHOLD_HEAD_NAMES then
 errmsg("If this Household head name cannot be different from the one given in the ID")
		select("Correct respondent Name", RESPONDENT_NAME);
 endif;


savepartial();
PROC B1
preproc

	// Automatically fill in person number
	B1 = curocc();
	noinput;//by default pass to the next field 

savepartial();
PROC B2
preproc

	//Set name of household head to be the first name in B2
	if curocc() = 1 then
		B2 = HOUSEHOLD_HEAD_NAMES;
	endif;

postproc

	B2 = toupper(B2);

	//Consistency on the name of the household head.
	if curocc() = 1 and B2 <> HOUSEHOLD_HEAD_NAMES then
		errmsg("This Household head name cannot be different from the one given in the ID")
		select("Correct Heads Name", HOUSEHOLD_HEAD_NAMES);
	endif;

	//The name of the household member cannot be blank
	if B2 = "" then
		errmsg("Please enter name of the household member")
//		select("Enter name", B2, "Correct more people response", MORE_PEOPLE(curocc() - 1));
	endif;

	// Set occurrence labels for individual rosters to use name
	string occurrenceLabel = strip(B2);

	setocclabel(PERSON_ROSTER(curocc()), occurrenceLabel);
	setocclabel(DEMOGRAPHIC_ROSTER(curocc()), occurrenceLabel);


savepartial();
PROC ANYMORE_PEOPLE
// End roster if there are no more householding members to enter
	if ANYMORE_PEOPLE = 2 then
		savepartial();
		endgroup;
	endif;
savepartial();
PROC NUMBER_OF_HOUSEHOLD_MEMBERS
preproc

	NUMBER_OF_HOUSEHOLD_MEMBERS = totocc(PERSON_ROSTER);
	noinput;


savepartial();
PROC B3
// If household head is married then his/her spouse must be of different sex.
	if B5(curocc()) = 2 and B3(curocc()) = B3(1) then
		errmsg("If %s is %s's spouse, then they must be of opposite sex",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct household head sex", B3(1),
			   "Correct spouse relationship", B5(curocc()),
			   "Correct spouse sex", B3(curocc()));
	endif;


savepartial();
PROC B4
	//Parent's age should be 12 years more than child's age.
	if B5(curocc()) = 4 and B4(1) < B4(curocc()) + MinAgeDiffBtwnChildAndParent then
		errmsg("%s's age should be 12 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct parent's age",B4(1),"Correct child's age",B4(curocc()));

	//Grandparent's age should be 24 years more than grandchild's age.
	elseif B5(curocc()) = 12 and B4(1) < B4(curocc()) + ( 2 * MinAgeDiffBtwnChildAndParent ) then
		errmsg("%s's age should be 24 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct grandparent's age",B4(1),"Correct grandchild's age",B4(curocc()));

	//Own parent's age should be 12 years more than household head's age.
	elseif B5(curocc()) = 8 and B4(curocc()) < B4(1) + MinAgeDiffBtwnChildAndParent then
		errmsg("%s's age should be 12 years less than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct household head's age",B4(1),"Correct own parent's age",B5(curocc()));

	//Grandparent's age should be 24 years more than grandchild's age.
	elseif B5(curocc()) = 11 and B4(curocc()) < B4(1) + ( 2 * MinAgeDiffBtwnChildAndParent ) then
		errmsg("%s's age should be 24 years more than %s's age",strip(B2(1)),strip(B2(curocc())))
		select("Correct grandparent's age",B4(1),"Correct grandchild's age",B4(curocc()));
	endif;


savepartial();
PROC B5
onfocus

	if curocc() = 1 then
		setvalueset(B5,B5_RELATIONSHIP_OF_HEAD);
	else
		setvalueset(B5,B5_RELATIONSHIP_TO_HEAD);
	endif;
	
postproc
// If household head is married then his/her spouse must be of different sex.
	if B5(curocc()) = 2 and B3(curocc()) = B3(1) then
		errmsg("If %s is %s's spouse, then they must be of opposite sex",
		strip(B2(curocc())), strip(B2(1)))
		select("Correct household head sex", B3(1),
			   "Correct spouse relationship", B5(curocc()),
			   "Correct spouse sex", B3(curocc()));
	endif;


savepartial();
PROC B6
preproc

	//if one is less than 10 years, then they should not be married.
	if B4 < YoungestAgeMarriage then
		B6 = 1;
		skip to B8;
	endif;

postproc

	// Ensure that under 10 is never married
	if B4 < YoungestAgeMarriage and B6 <> 1 then
		errmsg("%s is %d years old and marital status is %s. Under %d years old must never be married.",
		strip(B2(curocc())), B4(curocc()), getlabel(B6_VS1, B6(curocc())),YoungestAgeMarriage)
		select("Correct Age", B4, "Correct Marital Status", B6);
	endif;

	//The Household head and Spouse should have the same marital status
	if B5(curocc()) = 2 then

		if B6(1) = 2 and B6(curocc()) <> 2 then
			errmsg("%s cannot be monogamously married to %s while their marital status is different",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct head marital status",B6(1),"Correct spouse marital status",B6(curocc()),"Correct relationship",B5(curocc()));

		elseif B6(1) = 3 and B6(curocc()) <> 3 then
			errmsg("%s cannot be polygamously married to %s while their marital status is different",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct head marital status",B6(1),"Correct spouse marital status",B6(curocc()),"Correct relationship",B5(curocc()));

		endif;

	endif;
	
	if B4(curocc()) < YoungestAgeMarriage and B5(curocc()) = 2  then
	  errmsg("%s cannot be a spouse to %s , because is too young.",
			strip(B2(curocc())), strip(B2(1)))
			select("Correct age",B4(curocc()),"Correct relationship",B5(curocc()));
	endif;


savepartial();
PROC B7
 if  B4 <= 10  and B7 > 1 then 
   errmsg("%s is too young to have attained any educational level",
		strip(B2(curocc())))
		select("Correct Current educational level",B7(curocc()));
   endif;


savepartial();
PROC B8
if RESPONDENT_RELATIONSHIP = 1 and curocc(B8)=1 and  B8 <> 1 then
	 errmsg("The Household head is the respondent, so the residential status cannot be different from present")
 	select("Correct Heads residential status", B8);
endif;


savepartial();
PROC B9
savepartial();
PROC LQ01
if $ = 2 then
	endlevel;
endif;


savepartial();
PROC LQ02
preproc
TYPE_OF_LIVESTOCK_RAISED(1) = "Cattle";
TYPE_OF_LIVESTOCK_RAISED(2) = "Calve";
TYPE_OF_LIVESTOCK_RAISED(3) = "Improved dairy";
TYPE_OF_LIVESTOCK_RAISED(4) = "Improve beef";
TYPE_OF_LIVESTOCK_RAISED(5) = "Oxen";
TYPE_OF_LIVESTOCK_RAISED(6) = "Indegenous Cattle";
TYPE_OF_LIVESTOCK_RAISED(7) = "Sheep";
TYPE_OF_LIVESTOCK_RAISED(8) = "Improve Sheep";
TYPE_OF_LIVESTOCK_RAISED(9) = "Indegenous Sheep";
TYPE_OF_LIVESTOCK_RAISED(10) = "Goats";
TYPE_OF_LIVESTOCK_RAISED(11) = "Improved Goats";
TYPE_OF_LIVESTOCK_RAISED(12) = "Indegenous Goats";
TYPE_OF_LIVESTOCK_RAISED(13) = "Pigs";
TYPE_OF_LIVESTOCK_RAISED(14) = "Improved Pigs";
TYPE_OF_LIVESTOCK_RAISED(15) = "Indegenous Pigs";
TYPE_OF_LIVESTOCK_RAISED(16) =  "Horses";
TYPE_OF_LIVESTOCK_RAISED(17) = "Donkeys";
TYPE_OF_LIVESTOCK_RAISED(18) = "Mules";
TYPE_OF_LIVESTOCK_RAISED(19) = "Chickens";
TYPE_OF_LIVESTOCK_RAISED(20) = "Boilers";
TYPE_OF_LIVESTOCK_RAISED(21) = "Layers";
TYPE_OF_LIVESTOCK_RAISED(22) = "Insigenous";

postproc

savepartial();
PROC TYPE_OF_LIVESTOCK_RAISED
preproc
 //skip with respect the given answer
if curocc($) = 1 then
	//$(curocc($)) = "Cattle";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+6);//skip to sheep
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Calve";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Improved dairy";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Improve beef";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Oxen";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Indegenous Cattle";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Sheep";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+3);//skip to goats
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Improve Sheep";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Indegenous Sheep";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Goats";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+3);//skip to pigs
		endif;
	elseif curocc($) = 11 then
		//$(curocc($)) = "Improved Goats";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 12 then
		//$(curocc($)) = "Indegenous Goats";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 13 then
		//$(curocc($)) = "Pigs";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+3);//skip to the next row
		endif;
	elseif curocc($) = 14 then
		//$(curocc($)) = "Improved Pigs";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 15 then
		//$(curocc($)) = "Indegenous Pigs";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 16 then
		//$(curocc($)) = "Horses";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row 
		endif;
	elseif curocc($) = 17 then
		//$(curocc($)) = "Donkeys";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 18 then
		//$(curocc($)) = "Mules";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 19 then
		//$(curocc($)) = "Chickens";
		if LQ02 = 2 then
			skip to LQ10S_DAIRYCATTLE;//skip to livestock suplements
		endif;
	elseif curocc($) = 20 then
		//$(curocc($)) = "Boilers";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row of LQ03
		endif;
	elseif curocc($) = 21 then
		//$(curocc($)) = "Layers";
		if LQ02 = 2 then
			skip to LQ02(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 22 then
		//$(curocc($)) = "Indigenous Chickens";
		if LQ02 = 2 then
			skip to LQ10S_DAIRYCATTLE;//skip to suplements for all cattle
		endif;
endif;
postproc

if curocc($) = 2 then
		//$(curocc($)) = "Calve";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Improved dairy";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Improve beef";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Oxen";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Indegenous Cattle";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Improve Sheep";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Indegenous Sheep";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 11 then
		//$(curocc($)) = "Improved Goats";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 12 then
		//$(curocc($)) = "Indegenous Goats";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 14 then
		//$(curocc($)) = "Improved Pigs";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 15 then
		//$(curocc($)) = "Indegenous Pigs";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 16 then
		//$(curocc($)) = "Horses";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 17 then
		//$(curocc($)) = "Donkeys";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 18 then
		//$(curocc($)) = "Mules";
		if LQ02 = 1 then
			skip to LQ04(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 20 then
		//$(curocc($)) = "Boilers";
		if LQ02 = 1 then
			skip to LQ03(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 21 then
		//$(curocc($)) = "Layers";
		if LQ02 = 1 then
			skip to LQ03(curocc($));//skip to LQ04
		endif;
	elseif curocc($) = 22 then
		//$(curocc($)) = "Indigenous Chickens";
		if LQ02 = 1 then
			skip to LQ03(curocc($));//skip to LQ04
		endif;
endif;


savepartial();
PROC LQ03
preproc
if curocc($) = 19 then
	skip to LQ02(curocc($)+1);
endif;

postproc
if curocc($) = 1 then
	skip to LQ02(curocc($)+1);//LQ03 is the last answer for Cattle, so skip to the next livestock type(calves)
elseif curocc($) = 7 then
	skip to LQ02(curocc($)+1);//LQ03 is the last answer for Sheep, so skip to the next livestock type(Improved sheep)
elseif curocc($) = 10 then
	skip to LQ02(curocc($)+1);//LQ03 is the last answer for Goats, so skip to the next livestock type(Improved goats)
elseif curocc($) = 13 then
	skip to LQ02(curocc($)+1);//LQ03 is the last answer for Goats, so skip to the next livestock type(Improved pigs)
//elseif curocc($) = 19 then
	//skip to $(curocc($)+1);//LQ03 is the last answer for Goats, so skip to the next livestock type(broilers)
endif;

if curocc($) in 20:21 then 
	if $ in 1:2 then
		errmsg("Broilers and Layers cannot be coded 1 (Grazing system) or 2 (Mixed system)");
		reenter;
	endif;
endif;


savepartial();
PROC LQ04


savepartial();
PROC LQ05A
preproc
if curocc($) in 20:22 then//the condition only holds if row number is 20(broilers), 21(layers), or 23(indigenous)
	skip to LQ07A(curocc($));
endif;
postproc
//if non of the livestock was purchased skip to LQ06
if curocc($) in 2:6 then //the condition only holds if row number is 2(calves), 3(improved dairy), or 4(improved beef)...5(indigenous cattle)
	if($(curocc($)) = 0) then
		skip to LQ06(curocc($));
	endif;
endif; 
//if non of the livestock was slaughtered skip to LQ06
if curocc($) in 8:9 then //the condition only holds if row number is 8(improved sheep),9(indigenous sheep)
	if($(curocc($)) = 0) then
		skip to LQ06(curocc($));
	endif;
endif;
//if non of the livestock was slaughtered skip to LQ06
if curocc($) in 11:12 then //the condition only holds if row number is 11(improved goats),12(indigenous goats)
	if($(curocc($)) = 0) then
		skip to LQ06(curocc($));
	endif;
endif;
//if non of the livestock was slaughtered skip to LQ06
if curocc($) in 14:15 then //the condition only holds if row number is 14(improved pigs),15(indigenous pigs)
	if($(curocc($)) = 0) then
		skip to LQ06(curocc($));
	endif;
endif;


savepartial();
PROC LQ05B


savepartial();
PROC LQ06


savepartial();
PROC LQ07A
preproc
//if livestock is horses,donkeys,or mules skip to LQ08
if curocc($) in 16:18 then 
	skip to LQ08(curocc($));
endif;

postproc
//if non of the livestock was slaughtered skip to LQ08
if curocc($) in 2:6 then //the condition only holds if row number is 2(calves), 3(improved dairy), or 4(improved beef)...5(indigenous cattle)
	if($(curocc($)) = 0) then
		skip to LQ08(curocc($));
	endif;
endif; 
//if non of the livestock was slaughtered skip to LQ08
if curocc($) in 8:9 then //the condition only holds if row number is 8(improved sheep),9(indigenous sheep)
	if($(curocc($)) = 0) then
		skip to LQ08(curocc($));
	endif;
endif;
//if non of the livestock was slaughtered skip to LQ08
if curocc($) in 11:12 then //the condition only holds if row number is 11(improved goats),12(indigenous goats)
	if($(curocc($)) = 0) then
		skip to LQ08(curocc($));
	endif;
endif;
//if non of the livestock was slaughtered skip to LQ08
if curocc($) in 14:15 then //the condition only holds if row number is 14(improved pigs),15(indigenous pigs)
	if($(curocc($)) = 0) then
		skip to LQ08(curocc($));
	endif;
endif;

//LQ07A CANNOT EXCEED (LQ04+LQ05+LQ06)
{totalLivestockStock = LQ04(curocc($))+LQ05A(curocc($))+LQ06(curocc($));// produce the sum of (LQ04+LQ05+LQ06) for other livestock
if $ > totalLivestockStock then
	errmsg("Right now there is a total of %d  %s for this Household. So that means %s slaughtered cannot exceed %d. Right now you entered %d %s",totalLivestockStock,getocclabel(LIVESTOCK_STOCK(curocc($))),getocclabel(LIVESTOCK_STOCK(curocc($))),totalLivestockStock,$(curocc($)),getocclabel(LIVESTOCK_STOCK(curocc($))))
	select("Correct number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" raised", LQ04(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" purchased", LQ05A(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" that were received as gift/lobola/bartered",LQ06(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" slaughtered",$(curocc($)));
endif;

//LQ07A CANNOT EXCEED LQ04 FOR CHICKENS
numeric totalChickens = LQ04(curocc($));
if $ > totalChickens then
	errmsg("%d of slaughtered %s cannot exceed a total of %d available %s",$(curocc($)),getocclabel(LIVESTOCK_STOCK(curocc($))),totalChickens,getocclabel(LIVESTOCK_STOCK(curocc($))))
	select("Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" raised",LQ04(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" slaughtered",LQ07A(curocc($)));
endif;}


savepartial();
PROC LQ07B
//if did not pay for slaughtering, skip to LQ08
if curocc($) in 2:6 then //the condition only holds if row number is 2(calves), 3(improved dairy), or 4(improved beef)...5(indigenous cattle)
	if($(curocc($)) = 2) then
		skip to LQ08(curocc($));
	endif;
endif; 
//if did not pay for slaughtering, skip to LQ08
if curocc($) in 8:9 then //the condition only holds if row number is 8(improved sheep),9(indigenous sheep)
	if($(curocc($)) = 2) then
		skip to LQ08(curocc($));
	endif;
endif;
//if did not pay for slaughtering, skip to LQ08
if curocc($) in 11:12 then //the condition only holds if row number is 11(improved goats),12(indigenous goats)
	if($(curocc($)) = 2) then
		skip to LQ08(curocc($));
	endif;
endif;
//if did not pay for slaughtering, skip to LQ08
if curocc($) in 14:15 then //the condition only holds if row number is 14(improved pigs),15(indigenous pigs)
	if($(curocc($)) = 2) then
		skip to LQ08(curocc($));
	endif;
endif;
//if did not pay for slaughtering, skip to LQ08
if curocc($) in 20:22 then //the condition only holds if row number is 20(broilers),21(layers),22 (indegenous)
	if($(curocc($)) = 2) then
		skip to LQ08(curocc($));
	endif;
endif;


savepartial();
PROC LQ07C


savepartial();
PROC LQ08
preproc
if curocc($) in 20:22 then//the condition only holds if row number is 20(broilers), 21(layers), or 23(indigenous)
	skip to LQ9A(curocc($));
endif;

postproc
//LQ08 CANNOT EXCEED (LQ04+LQ05+LQ06)
{totalLivestockStock = LQ04(curocc($))+LQ05A(curocc($))+LQ06(curocc($));// produce the sum of (LQ04+LQ05+LQ06)
if $ > totalLivestockStock then
	errmsg("Right now there is a total of %d  %s for this Household. So that means %s given/lobolad/lost cannot exceed %d. Right now you entered %d %s",totalLivestockStock,getocclabel(LIVESTOCK_STOCK(curocc($))),getocclabel(LIVESTOCK_STOCK(curocc($))),totalLivestockStock,$(curocc($)),getocclabel(LIVESTOCK_STOCK(curocc($))))
	select("Correct number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" raised", LQ04(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" purchased", LQ05A(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+"that were received as gift/lobola/bartered",LQ06(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" slaughtered",$(curocc($)));
endif;}


savepartial();
PROC LQ9A
if $(curocc($)) = 0  then
	if curocc($) <> 22 then
		skip to LQ02(curocc($)+1);
	else
		skip to LQ10S_DAIRYCATTLE;
	endif;
endif;

//LQ08 CANNOT EXCEED (LQ04+LQ05+LQ06)
//totalSoldForCash = 0; //to obtain the difference between (LQ04+LQ05A+LQ06) and LQ08 = ((LQ04+LQ05A+LQ06) - LQ08)
{totalSoldForCash = (LQ04(curocc($))+LQ05A(curocc($))+LQ06(curocc($))) - LQ08(curocc($));// produce the sum of (LQ04+LQ05+LQ06)
if $ > totalSoldForCash then
	errmsg("Right now there is a total of %d  %s for this Household. So that means %s sold for cash cannot exceed %d. Right now you entered %d %s",totalSoldForCash,getocclabel(LIVESTOCK_STOCK(curocc($))),getocclabel(LIVESTOCK_STOCK(curocc($))),totalSoldForCash,$(curocc($)),getocclabel(LIVESTOCK_STOCK(curocc($))))//LQ07A
	select("Correct number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" raised", LQ04(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" purchased", LQ05A(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+"that were received as gift/lobola/bartered",LQ06(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" slaughtered",LQ07A(curocc($)),"Correnct the number sold for cash",$(curocc($)));
endif;

//LQ09A CANNOT EXCEED (LQ04 - LQ07A) FOR CHICKENS
if curocc($) in 20:22 then
	numeric totalChickens = (LQ04(curocc($)) - LQ07A(curocc($)));
	if $ > totalChickens then
		errmsg("The number of %s sold for cash: %d is greater than the total of %d of available %s.",getocclabel(LIVESTOCK_STOCK(curocc($))),$(curocc($)),LQ04(curocc($)),getocclabel(LIVESTOCK_STOCK(curocc($))))
		select("Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" raised",LQ04(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" slaughtered",LQ07A(curocc($)),"Correct the number of "+getocclabel(LIVESTOCK_STOCK(curocc($)))+" sold for cash",$(curocc($)));
	endif;
endif;}


savepartial();
PROC LQ9B
{if curocc($) in 2:6 then//the condition only holds if row number is 2(calves), 3(improved dairy), or 4(improved beef)...5(indigenous cattle)
	skip to LQ04(curocc($)+1);
endif;}
savepartial();
PROC LQ10S_DAIRYCATTLE
preproc

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(1) = 2 then
	skip to LQ10S_SHEEP;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10S_ALLCATTLE;
endif;

savepartial();
PROC USED_SUPPLIMENT_TYPE


savepartial();
PROC TYPE_OF_SUPPLIMENT_DAIRY_CATTLE
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_TYPE(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to USED_SUPPLIMENT_TYPE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_TYPE = 2 then
			skip to LQ10S_ALLCATTLE;//skip to suplements used for all cattle
		endif;
endif;

postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_DAIRY_CATTLE
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_DAIRY_CATTLE
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA


savepartial();
PROC LQ13SB

savepartial();
PROC LQ10S_ALLCATTLE
preproc
//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_DAIRY_CATTLE))
	if LQ10S_DAIRYCATTLE = 1 and USED_SUPPLIMENT_TYPE(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_DAIRY_CATTLE(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(1) = 2 then
	skip to LQ10S_SHEEP;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10S_SHEEP;
endif;

savepartial();
PROC USED_SUPPLIMENT_ALL_CATTLE

savepartial();
PROC TYPE_OF_SUPPLIMENT_ALL_CATTLE
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_ALL_CATTLE(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLE(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_ALL_CATTLE = 2 then
			skip to LQ10S_SHEEP;//skip to suplements used for sheep
		endif;

endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_CATTLE
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_ALL_CATTLE
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_CATTLE

savepartial();
PROC LQ13SB_ALL_CATTLE

savepartial();
PROC LQ10S_SHEEP
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_ALL_CATTLE000))
	if LQ10S_ALLCATTLE = 1 and USED_SUPPLIMENT_ALL_CATTLE(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_ALL_CATTLE(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(7) = 2 then
	skip to LQ10S_GOATS;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10S_GOATS;
endif;

savepartial();
PROC USED_SUPPLIMENT_SHEEP

savepartial();
PROC TYPE_OF_SUPPLIMENT_SHEEP
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_SHEEP(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to USED_SUPPLIMENT_SHEEP(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_SHEEP = 2 then
			skip to LQ10S_GOATS;//skip to suplements used for sheep
		endif;

endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_SHEEP
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_SHEEP

preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_SHEEP

savepartial();
PROC LQ13SB_ALL_SHEEP

savepartial();
PROC LQ10S_GOATS
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_SHEEP000))
	if LQ10S_SHEEP = 1 and USED_SUPPLIMENT_SHEEP(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_SHEEP(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(10) = 2 then
	skip to LQ10S_POULTRY;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 or notappl then
	skip to LQ10S_POULTRY;
endif;

savepartial();
PROC USED_SUPPLIMENT_GOATS

savepartial();
PROC TYPE_OF_SUPPLIMENT_GOATS
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_GOATS(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to USED_SUPPLIMENT_GOATS(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_GOATS = 2 then
			skip to LQ10S_POULTRY;//skip to suplements used for poultry
		endif;
endif;

postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_GOATS
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_GOATS
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_GOATS

savepartial();
PROC LQ13SB_ALL_GOATS

savepartial();
PROC LQ10S_POULTRY
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_GOATS000))
	if LQ10S_GOATS = 1 and USED_SUPPLIMENT_GOATS(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_GOATS(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(19) = 2 then
	skip to LQ10W_DAIRYCATTLE;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10W_DAIRYCATTLE;
endif;

savepartial();
PROC USED_SUPPLIMENT_POULTRY

savepartial();
PROC TYPE_OF_SUPPLIMENT_POULTRY
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_POULTRY(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to USED_SUPPLIMENT_POULTRY(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_POULTRY = 2 then
			skip to LQ10W_DAIRYCATTLE;//skip to suplements used for sheep
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_POULTRY
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_POULTRY
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";

postproc

savepartial();
PROC LQ13SA_ALL_GOATT

savepartial();
PROC LQ13SB_ALL_POULTRY

savepartial();
PROC LQ10W_DAIRYCATTLE
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_POULTRY000))
	if LQ10S_POULTRY = 1 and USED_SUPPLIMENT_POULTRY(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_POULTRY(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(1) = 2 then
	skip to LQ10W_SHEEP;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10W_ALLCATTLE;
endif;

savepartial();
PROC USED_SUPPLIMENT_TYPW

savepartial();
PROC TYPE_OF_SUPPLIMENEW
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_TYPW(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to USED_SUPPLIMENT_TYPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_TYPW = 2 then
			skip to LQ10W_ALLCATTLE;//skip to suplements used for all cattle
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_DAIRY_CATTLE_W
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_DAIRY_CATTLE_W
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13WA

savepartial();
PROC LQ13WB

savepartial();
PROC LQ10W_ALLCATTLE
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_TYPW000))
	if LQ10W_DAIRYCATTLE = 1 and USED_SUPPLIMENT_TYPW(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_DAIRY_CATTLE_W(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(1) = 2 then
	skip to LQ10W_SHEEP;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10W_SHEEP;
endif;

savepartial();
PROC USED_SUPPLIMENT_ALL_CATTLEW

savepartial();
PROC TYPE_OF_SUPPLIMENT_ALL_CATTLEW
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_ALL_CATTLEW(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to USED_SUPPLIMENT_ALL_CATTLEW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_ALL_CATTLEW = 2 then
			skip to LQ10W_SHEEP;//skip to suplements used for sheep
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_CATTLE_W
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_ALL_CATTLE_W
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_CATTLEW

savepartial();
PROC LQ13SB_ALL_CATTLEW

savepartial();
PROC LQ10W_SHEEP
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_ALL_CATTLEW000))
	if LQ10W_ALLCATTLE = 1 and USED_SUPPLIMENT_ALL_CATTLEW(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_ALL_CATTLE_W(counter)));
		//index_supplements = index_supplements +1;
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(7) = 2 then
	skip to LQ10W_GOATS;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10W_GOATS;
endif;

savepartial();
PROC USED_SUPPLIMENT_SHEEPW

savepartial();
PROC TYPE_OF_SUPPLIMENT_SHEEPW
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_SHEEPW(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to USED_SUPPLIMENT_SHEEPW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_SHEEPW = 2 then
			skip to LQ10W_GOATS;//skip to suplements used for goats
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_SHEEP_W
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_SHEEP_W
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_SHEEPW

savepartial();
PROC LQ13SB_ALL_SHEEPW

savepartial();
PROC LQ10W_GOATS
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_SHEEPW000))
	if LQ10W_SHEEP = 1 and USED_SUPPLIMENT_SHEEPW(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_SHEEP_W(counter)));
	endif;
enddo;


//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(10) = 2 then
	skip to LQ10W_POULTRY;
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ10W_POULTRY;
endif;

savepartial();
PROC USED_SUPPLIMENT_GOATW

savepartial();
PROC TYPE_OF_SUPPLIMENT_GOATW
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_GOATW(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to USED_SUPPLIMENT_GOATW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_GOATW = 2 then
			skip to LQ10W_POULTRY;//skip to suplements used for poultry
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_GOATS_W
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_GOATS_W
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_GOATW

savepartial();
PROC LQ13SB_ALL_GOATW

savepartial();
PROC LQ10W_POULTRY
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_GOATW000))
	if LQ10W_POULTRY = 1 and USED_SUPPLIMENT_GOATW(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_GOATS_W(counter)));
	endif;
enddo;

//give CODES to show the type of sepplement used
LQ14S(1) = 01;
LQ14S(2) = 02;
LQ14S(3) = 03;
LQ14S(4) = 04;
LQ14S(5) = 05;
LQ14S(6) = 06;
LQ14S(7) = 07;
LQ14S(8) = 08;
LQ14S(9) = 09;
LQ14S(10) = 10;

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(19) = 2 then
	skip to LQ14S(1);
endif;

//if the answer is no skip to the next livestock type
postproc
if $ = 2 then
	skip to LQ14S(1);
endif;

savepartial();
PROC USED_SUPPLIMENT_POULTRYW

savepartial();
PROC TYPE_OF_SUPPLIMENT_POULTRYW
preproc
//give labels to show the type of sepplement used
$(1) = "Fodder/Hay/Grass";
$(2) = "Crop Residue";
$(3) = "Feed Concentrates";
$(4) = "Dairy Meal";
$(5) = "Poultry Meal";
$(6) = "Sheep Palets";
$(7) = "Moroko";
$(8) = "Seameal/Bran";
$(9) = "Salt";
$(10) = "Mineral Block";

if curocc($) = 1 then
	//$(curocc($)) = "Fodder/Hay/Grass";
		if USED_SUPPLIMENT_POULTRYW(curocc($)) = 2 then
				skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 2 then
		//$(curocc($)) = "Crop Residue";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 3 then
		//$(curocc($)) = "Feed Concentrete";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 4 then
		//$(curocc($)) = "Dairy Meal";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 5 then
		//$(curocc($)) = "Poultry Meal";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 6 then
		//$(curocc($)) = "Sheep Palets";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 7 then
		//$(curocc($)) = "Moroko";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 8 then
		//$(curocc($)) = "Seameal/Bran";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 9 then
		//$(curocc($)) = "Salt";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to USED_SUPPLIMENT_POULTRYW(curocc($)+1);//skip to the next row
		endif;
	elseif curocc($) = 10 then
		//$(curocc($)) = "Mineral Block";
		if USED_SUPPLIMENT_POULTRYW = 2 then
			skip to LQ14S(1);//skip to used supplements
		endif;
endif;
postproc

savepartial();
PROC SUPPLEMENT_CODE_ALL_POULTRY_W
preproc
//give CODES to show the type of sepplement used
$(1) = 01;
$(2) = 02;
$(3) = 03;
$(4) = 04;
$(5) = 05;
$(6) = 06;
$(7) = 07;
$(8) = 08;
$(9) = 09;
$(10) = 10;
postproc

savepartial();
PROC SUPPLEMENT_CODE_CHARACTER_POULTRY_W
preproc
//give CODES to show the type of sepplement used
$(1) = "A";
$(2) = "B";
$(3) = "C";
$(4) = "D";
$(5) = "E";
$(6) = "F";
$(7) = "G";
$(8) = "H";
$(9) = "I";
$(10) = "J";
postproc

savepartial();
PROC LQ13SA_ALL_POULTRYW

savepartial();
PROC LQ13SB_ALL_POULTRYW
//give CODES to show the type of sepplement used
LQ14S(1) = 01;
LQ14S(2) = 02;
LQ14S(3) = 03;
LQ14S(4) = 04;
LQ14S(5) = 05;
LQ14S(6) = 06;
LQ14S(7) = 07;
LQ14S(8) = 08;
LQ14S(9) = 09;
LQ14S(10) = 10;

savepartial();
PROC LQ14S
preproc

//create string of supplements used
do numeric counter = 1 while counter <= (totocc(USED_SUPPLIMENT_POULTRYW000))
	if LQ10W_GOATS = 1 and USED_SUPPLIMENT_POULTRYW(counter) = 1 then
		supplents_used = concat(supplents_used,strip(SUPPLEMENT_CODE_CHARACTER_POULTRY_W(counter)));
	endif;
enddo;
//errmsg(supplents_used);
noinput;
postproc
if curocc($) = 1 then
	if pos('A',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 2 then
	if pos('B',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 3 then
	if pos('C',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 4 then
	if pos('D',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 5 then
	if pos('E',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 6 then
	if pos('F',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 7 then
	if pos('G',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 8 then
	if pos('H',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 9 then
	if pos('I',strip(supplents_used)) < 1 then 
		skip to next;
	endif;
elseif curocc($) = 10 then
	if pos('J',strip(supplents_used)) < 1 then 
		skip to LQ19A(1);
	endif;
endif;
errmsg(supplents_used);
savepartial();

PROC LQ15S
//if purchased skip to quantity
if $ = 1 then
	skip to LQ17SA(curocc($));
endif;

savepartial();
PROC LQ16S
//if no supplement skip to the next livestock type
if curocc($) = 1 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 2 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 3 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 4 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 5 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 6 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 7 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 8 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 9 then
		if $(curocc($)) = 2 then
			skip to next;//skip to the next row
		endif;
	elseif curocc($) = 10 then
		if $(curocc($)) = 2 then
			skip to LQ19A(1);//skip to livestock management
		endif;
endif;

savepartial();
PROC LQ17SA

savepartial();
PROC LQ17SB

savepartial();
PROC LQ17SC

savepartial();
PROC LQ18S
savepartial();
PROC LQ19A
preproc

LIVESTOCK_NAME(1) = "Cattle";//IF ROW NUMBER IS 1 THEN WE ARE ON CATTLE
LIVESTOCK_NAME(2) = "Sheep";//IF ROW NUMBER IS 2 THEN WE ARE ON SHEEP
LIVESTOCK_NAME(3) = "Goats";//IF ROW NUMBER IS 3 THEN WE ARE ON GOATS
LIVESTOCK_NAME(4) = "Poultry";//IF ROW NUMBER IS 3 THEN WE ARE ON POULTRY EXOTIC

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep 
if curocc($) = 1 then
	if LQ02(1) = 2 then
		skip to next;
	endif;
elseif curocc($) = 2 then
	if LQ02(7) = 2 then
		skip to next;
	endif;
elseif curocc($) = 3 then
	if LQ02(10) = 2 then
		skip to next;
	endif;
elseif curocc($) = 4 then
	if LQ02(19) = 2 then
		skip to LQ24;//SKIP TO LABOUR COSTS
	endif;		
endif;


postproc
//GIVE SKIPS TO LQ20A DEPENDING ON THE ANSWER GIVEN (WHEN ANSWER IS 2)
if curocc($) = 1 then
	if $ = 2 then
		skip to $(curocc($)+1);
	endif;
elseif curocc($) = 2 then
	if $ = 2 then
		skip to $(curocc($)+1);
	endif;
elseif curocc($) = 3 then
	if $ = 2 then
		skip to $(curocc($)+1);
	endif;
elseif curocc($) = 4 then
	if $ = 2 then
		skip to LQ24;//SKIP TO LABOUR COSTS
	endif;		
endif;


savepartial();
PROC LIVESTOCK_NAME

savepartial();
PROC LQ19B


savepartial();
PROC LQ20A
if $(curocc($)) = 2 then
	skip to LQ21A(curocc($));
endif;


savepartial();
PROC LQ20B


savepartial();
PROC LQ20C
//IF THE GIVEN ANSWER IS NOT EQUAL TO 5 SKIP OTHER MAIN SOURCE TO LQ21A ELSE SKIP TO OTHER MAIN SOURCE
if curocc($) = 1 then
	if $ in 1:5 then
		skip to LQ21A(curocc($));
	{else
		skip to LQ20C_OTHER(curocc($));}
	endif;
elseif curocc($) = 2 then
	if $ in 1:5 then
		skip to LQ21A(curocc($));
	{else
		skip to LQ20C_OTHER(curocc($));}
	endif;
elseif curocc($) = 3 then
	if $ in 1:5 then
		skip to LQ21A(curocc($));
	{else
		skip to LQ20C_OTHER(curocc($));}
	endif;
elseif curocc($) = 4 then
	if $ in 1:5 then
		skip to LQ21A(curocc($));
	{else
		skip to LQ20C_OTHER(curocc($));}
	endif;	
endif;


savepartial();
PROC LQ21A
//IF NO PARASITE CONTROL WAS USED SKIP TO LQ22
if $(curocc($)) = 7 then
	skip to LQ22(curocc($));
endif;


savepartial();
PROC LQ21B


savepartial();
PROC LQ22
//IF THE GIVEN ANSWER IS NOT EQUAL TO 4 SKIP OTHER MAIN SOURCE TO LQ21A ELSE SKIP TO OTHER MAIN SOURCE
if curocc($) = 1 then
	if $(curocc($)) = 2 then
		skip to LQ19A(2);
	endif;
elseif curocc($) = 2 then
	if $(curocc($)) = 2 then
		skip to LQ19A(3);
	endif;
elseif curocc($) = 3 then
	if $(curocc($)) = 2 then
		skip to LQ19A(4);
	endif;
elseif curocc($) = 4 then
	if $(curocc($)) = 2 then
		skip to LQ24;
	endif;
endif;


savepartial();
PROC LQ22B


savepartial();
PROC LQ23A
preproc
//LQ23A ANS LQ23B do not apply to POULTRY so skip to LABOUR COSTS
if curocc($) = 4 then
	skip to LQ24;
endif;

postproc

savepartial();
PROC LQ23B
savepartial();
PROC LQ24
if $ = 2 then 
	skip to  LQ26;
endif;


savepartial();
PROC LQ25


savepartial();
PROC LQ26
if $ = 2 then 
	skip to  LQ30;
endif;


savepartial();
PROC HOUSEHOLD_MEMBER_OR_HIRED_WORKER

savepartial();
PROC LQ27
onfocus
	// set value set to be list of names of household members
	// and line numbers of household members.
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then
	//$ = "";
	setcapturetype($,1);
	numeric x;
	do x = 1 while x <= totocc(PERSON_ROSTER)
		if B9(x) <> 2 then
			alpha_codes(x) = maketext("%d",B1(x));
			labels(x) = B2(x);
		endif;
	enddo;

	alpha_codes(x) = "";

	setvalueset($, alpha_codes, labels);
else
	//$ = "";
	setcapturetype($,0);
endif;

postproc
CheckBlank($);//check if the field is empty

$ = toupper($);//change text to upper case

//set occurrence labels
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then
	//set the index number equals to the current input of LQ27, but first convert it from string to number
	numeric index = tonumber($(curocc($)));
	setocclabel(TABLE_L4,strip(B2(index)));
else
	setocclabel(TABLE_L4,strip($(curocc($))));
endif;


savepartial();
PROC LQ28A


savepartial();
PROC LQ28B
if $ > 4 then
	errmsg("The average number of weeks spent on tending and herding livestock cannot exceed 4 weeks.");
	reenter;
endif;


savepartial();
PROC LQ28C
if $ > 7 then
	errmsg("The average number of days in a week spent on tending and herding livestock cannot exceed 7 days.");
	reenter;
endif;


savepartial();
PROC LQ28D
if $ > 24 then
	errmsg("The average number of hours worked in a day spent on tending and herding livestock cannot exceed 24 days.");
	reenter;
endif;


savepartial();
PROC LQ29A
preproc
//if its not the hired worker, skip LQ29A
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then 
	skip to ARE_THERE_ANY_MORE_PERSONS_INVOL(curocc($));
endif;

postproc

savepartial();
PROC LQ29B


savepartial();
PROC ARE_THERE_ANY_MORE_PERSONS_INVOL
if $ = 2 then //control the number of rows to enter in the roster
	endgroup;
endif;
savepartial();
PROC LQ30
preproc
//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if LQ02(19) = 2 then
	skip to LQ34;
endif;
postproc
//if the answer is 2 skip to LQ34
if $ = 2 then 
	skip to  LQ34;
endif;



savepartial();
PROC HOUSEHOLD_MEMBER_OR_HIRED_PLTZ


savepartial();
PROC LQ31
onfocus
	// set value set to be list of names of household members
	// and line numbers of household members.
if HOUSEHOLD_MEMBER_OR_HIRED_PLTZ(curocc($)) = 1 then
	//$ = "";
	setcapturetype($,1);
	numeric x;
	do x = 1 while x <= totocc(PERSON_ROSTER)
		if B9(x) <> 2 then
			alpha_codes(x) = maketext("%d",B1(x));
			labels(x) = B2(x);
		endif;
	enddo;

	alpha_codes(x) = "";

	setvalueset($, alpha_codes, labels);
else
	//$ = "";
	setcapturetype($,0);
endif;

postproc
CheckBlank($);//check if the field is empty
if $ = "0" then
	errmsg("The field cannot contain the value Zero (0).");
	reenter;
endif;
$ = toupper($);

//set occurrence labels
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then
	//set the index number equals to the current input of LQ27, but first convert it from string to number
	numeric index = tonumber($(curocc($)));
	setocclabel(TABLE_L5,strip(B2(index)));
else
	setocclabel(TABLE_L5,strip($(curocc($))));
endif;


savepartial();
PROC LQ32A


savepartial();
PROC LQ32B
if $ > 4 then
	errmsg("The average number of weeks spent on tending and herding livestock cannot exceed 4 weeks.");
	reenter;
endif;


savepartial();
PROC LQ32C
if $ > 7 then
	errmsg("The average number of days in a week spent on tending and herding livestock cannot exceed 7 days.");
	reenter;
endif;


savepartial();
PROC LQ32D
if $ > 24 then
	errmsg("The average number of hours worked in a day spent on tending and herding livestock cannot exceed 24 days.");
	reenter;
endif;


savepartial();
PROC LQ33A
preproc
//if its not the hired worker, skip LQ29A
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then 
	skip to ARE_THERE_ANY_MORE_PERSONS_PLTZ(curocc($));
endif;

postproc

savepartial();
PROC LQ33B


savepartial();
PROC ARE_THERE_ANY_MORE_PERSONS_PLTZ
if $ = 2 then //control the number of rows to enter in the roster
	endgroup;
endif;
savepartial();
PROC LQ34
if $ = 2 then 
	skip to  LQ40S(1);
endif;


savepartial();
PROC HOUSEHOLD_MEMBER_OR_HIRED_OTHES


savepartial();
PROC LQ35
onfocus
	// set value set to be list of names of household members
	// and line numbers of household members.
if HOUSEHOLD_MEMBER_OR_HIRED_OTHES(curocc($)) = 1 then
	//$ = "";
	setcapturetype($,1);
	numeric x;
	do x = 1 while x <= totocc(PERSON_ROSTER)
		if B9(x) <> 2 then
			alpha_codes(x) = maketext("%d",B1(x));
			labels(x) = B2(x);
		endif;
	enddo;

	alpha_codes(x) = "";

	setvalueset($, alpha_codes, labels);
else
	//$ = "";
	setcapturetype($,0);
endif;

postproc
CheckBlank($);//check if the field is empty
if $ = "0" then
	errmsg("The field cannot contain the value Zero (0).");
	reenter;
endif;
$ = toupper($);

//set occurrence labels
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then
	//set the index number equals to the current input of LQ27, but first convert it from string to number
	numeric index = tonumber($(curocc($)));
	setocclabel(TABLE_L6,strip(B2(index)));
else
	setocclabel(TABLE_L6,strip($(curocc($))));
endif;


savepartial();
PROC LQ36
$ = toupper($);


savepartial();
PROC LQ37A


savepartial();
PROC LQ37B
if $ > 4 then
	errmsg("The average number of weeks spent on tending and herding livestock cannot exceed 4 weeks.");
	reenter;
endif;


savepartial();
PROC LQ37C
if $ > 7 then
	errmsg("The average number of days in a week spent on tending and herding livestock cannot exceed 7 days.");
	reenter;
endif;


savepartial();
PROC LQ37D
if $ > 24 then
	errmsg("The average number of hours worked in a day spent on tending and herding livestock cannot exceed 24 days.");
	reenter;
endif;


savepartial();
PROC LQ38A
preproc
//if its not the hired worker, skip LQ29A
if HOUSEHOLD_MEMBER_OR_HIRED_WORKER(curocc($)) = 1 then 
	skip to ARE_THERE_ANY_MORE_PERSONS_OTHES(curocc($));
endif;

postproc

savepartial();
PROC LQ38B


savepartial();
PROC ARE_THERE_ANY_MORE_PERSONS_OTHES
if $ = 2 then //control the number of rows to enter in the roster
	endgroup;
endif;
savepartial();
PROC PRODUCT_LABEL_S


savepartial();
PROC LQ40S
preproc
//give lables to livestock products
PRODUCT_LABEL_S(1) = "Cow milk";
PRODUCT_LABEL_S(2) = "Chicken eggs";
PRODUCT_LABEL_S(3) = "Meat from cattle";
PRODUCT_LABEL_S(4) = "Meat from sheep";
PRODUCT_LABEL_S(5) = "Meat from goats";
PRODUCT_LABEL_S(6) = "Chickens for meat (live/slaughtered)";
PRODUCT_LABEL_S(7) = "Skin and hides";

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if curocc($) = 1 then
	if LQ02(1) = 2 then
		skip to next;
	endif;
elseif curocc($) = 2 then
	if LQ02(19) = 2 then
		skip to next;
	endif;
elseif curocc($) = 3 then
	if LQ02(1) = 2 then
		skip to next;
	endif;
elseif curocc($) = 4 then
	if LQ02(7) = 2 then
		skip to next;
	endif;
elseif curocc($) = 5 then
	if LQ02(10) = 2 then
		skip to next;
	endif;
elseif curocc($) = 6 then
	if LQ02(19) = 2 then
		skip to next;
	endif;
elseif curocc($) = 7 then
	if LQ02(1) = 2 and LQ02(7) = 2 and LQ02(10) = 2 and LQ02(19) = 2 then
		skip to LQ40W(1);
	endif;
endif;

postproc
//skips if there were no livestock product 
if curocc($) = 1 then 
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Chicken eggs
	endif;
elseif curocc($) = 2 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from cattle
	endif;
elseif curocc($) = 3 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from sheep
	endif;
elseif curocc($) = 4 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from goats
	endif;
elseif curocc($) = 5 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Chickens for meat (live/slaughtered)
	endif;
elseif curocc($) = 6 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Skin and hides
	endif;
elseif curocc($) = 7 then
	if $ = 2 then 
		skip to PRODUCT_LABEL_W(1);
	endif;	
endif;


savepartial();
PROC LQ41SA
postproc
//checks if the livestock product duration is greater than 6 months 
if curocc($) = 1 then 
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 2 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 3 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 4 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 5 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 6 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 7 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;	
endif;


savepartial();
PROC LQ42SA


savepartial();
PROC LQ42SB
postproc
//skips "Other Specify" field if code is not equal to 08 
if curocc($) = 1 then 
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 2 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 3 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 4 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 5 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 6 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;
elseif curocc($) = 7 then
	if $ <> 8 then 
		skip to LQ43S(curocc($));
	endif;	
endif;


savepartial();
PROC LQ43S
postproc
//skips if the holding did not sell any of the livestock product 
if curocc($) = 1 then 
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Chicken eggs
	endif;
elseif curocc($) = 2 then
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Meat from cattle
	endif;
elseif curocc($) = 3 then
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Meat from sheep
	endif;
elseif curocc($) = 4 then
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Meat from goats
	endif;
elseif curocc($) = 5 then
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Chickens for meat (live/slaughtered)
	endif;
elseif curocc($) = 6 then
	if $ = 2 then 
		skip to LQ40S(curocc($)+1);// skip to Skin and hides
	endif;
elseif curocc($) = 7 then
	if $ = 2 then 
		skip to PRODUCT_LABEL_W(1);
	endif;	
endif;


savepartial();
PROC LQ44SA


savepartial();
PROC LQ44SB


savepartial();
PROC LQ44SC
savepartial();
PROC PRODUCT_LABEL_W


savepartial();
PROC LQ40W
preproc
PRODUCT_LABEL_W(1) = "Cow milk";
PRODUCT_LABEL_W(2) = "Chicken eggs";
PRODUCT_LABEL_W(3) = "Meat from cattle";
PRODUCT_LABEL_W(4) = "Meat from sheep";
PRODUCT_LABEL_W(5) = "Meat from goats";
PRODUCT_LABEL_W(6) = "Chickens for meat (live/slaughtered)";
PRODUCT_LABEL_W(7) = "Skin and hides";

//skip based on the livestock raised by the household. e.g. if no cattle was raised skip to sheep
if curocc($) = 1 then
	if LQ02(1) = 2 then
		skip to next;
	endif;
elseif curocc($) = 2 then
	if LQ02(19) = 2 then
		skip to next;
	endif;
elseif curocc($) = 3 then
	if LQ02(1) = 2 then
		skip to next;
	endif;
elseif curocc($) = 4 then
	if LQ02(7) = 2 then
		skip to next;
	endif;
elseif curocc($) = 5 then
	if LQ02(10) = 2 then
		skip to next;
	endif;
elseif curocc($) = 6 then
	if LQ02(19) = 2 then
		skip to next;
	endif;
elseif curocc($) = 7 then
	if LQ02(1) = 2 and LQ02(7) = 2 and LQ02(10) = 2 and LQ02(19) = 2 then
		skip to LQ45A;
	endif;
endif;

postproc
//skips if there were no livestock product 
if curocc($) = 1 then 
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Chicken eggs
	endif;
elseif curocc($) = 2 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from cattle
	endif;
elseif curocc($) = 3 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from sheep
	endif;
elseif curocc($) = 4 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Meat from goats
	endif;
elseif curocc($) = 5 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Chickens for meat (live/slaughtered)
	endif;
elseif curocc($) = 6 then
	if $ = 2 then 
		skip to $(curocc($)+1);// skip to Skin and hides
	endif;
elseif curocc($) = 7 then
	if $ = 2 then 
		skip to LQ45A;
	endif;	
endif;


savepartial();
PROC LQ41WA
postproc
//checks if the livestock product duration is greater than 6 months 
if curocc($) = 1 then 
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 2 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 3 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 4 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 5 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 6 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;
elseif curocc($) = 7 then
	if $  > 6 then 
		errmsg("The expected duration must be atmost 6 months. Right now you entered %d",$);
		reenter;
	endif;	
endif;


savepartial();
PROC LQ42WA


savepartial();
PROC LQ42WB
postproc
//skips "Other Specify" field if code is not equal to 08 
if curocc($) = 1 then 
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 2 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 3 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 4 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 5 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 6 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;
elseif curocc($) = 7 then
	if $ <> 8 then 
		skip to LQ43W(curocc($));
	endif;	
endif;


savepartial();
PROC LQ43W
postproc
//skips if there were no livestock product 
if curocc($) = 1 then 
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Chicken eggs
	endif;
elseif curocc($) = 2 then
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Meat from cattle
	endif;
elseif curocc($) = 3 then
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Meat from sheep
	endif;
elseif curocc($) = 4 then
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Meat from goats
	endif;
elseif curocc($) = 5 then
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Chickens for meat (live/slaughtered)
	endif;
elseif curocc($) = 6 then
	if $ = 2 then 
		skip to LQ40W(curocc($)+1);// skip to Skin and hides
	endif;
elseif curocc($) = 7 then
	if $ = 2 then 
		skip to LQ45A;
	endif;	
endif;


savepartial();
PROC LQ44WA


savepartial();
PROC LQ44WB


savepartial();
PROC LQ44WC
savepartial();
PROC LQ45A
if $ = 2 then 
	skip to  LQ46A;
endif;


savepartial();
PROC LQ45B
if $ = 2 then 
	skip to  LQ46A;
endif;


savepartial();
PROC LQ45C


savepartial();
PROC LQ46A
if $ = 2 then 
	endlevel;
endif;


savepartial();
PROC LQ46B
preproc
if LQ01 = 2 then
	noinput;
endif;

postproc

savepartial();
